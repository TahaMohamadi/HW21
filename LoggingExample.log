2022-11-14 11:57:36 | FATAL | i.T.Main | repo fatal
2022-11-14 11:57:36 | ERROR | i.T.Main | repo error
2022-11-14 11:57:36 | WARN  | i.T.Main | repo warn
2022-11-14 11:57:36 | INFO  | i.T.Main | repo info
2022-11-14 11:57:36 | DEBUG | i.T.Main | repo info
2022-11-14 13:32:03 | FATAL | i.T.Main | repo fatal
2022-11-14 13:32:03 | ERROR | i.T.Main | repo error
2022-11-14 13:32:03 | WARN  | i.T.Main | repo warn
2022-11-14 13:32:03 | INFO  | i.T.Main | repo info
2022-11-14 13:32:03 | DEBUG | i.T.Main | repo info
2022-11-14 13:32:25 | FATAL | i.T.Main | repo fatal
2022-11-14 13:32:25 | ERROR | i.T.Main | repo error
2022-11-14 13:32:25 | WARN  | i.T.Main | repo warn
2022-11-14 13:32:25 | INFO  | i.T.Main | repo info
2022-11-14 13:32:47 | FATAL | i.T.Main | repo fatal
2022-11-14 13:32:47 | ERROR | i.T.Main | repo error
2022-11-14 13:32:47 | WARN  | i.T.Main | repo warn
2022-11-14 20:22:42 | DEBUG | o.j.logging | Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-11-14 20:22:42 | DEBUG | o.h.j.HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
2022-11-14 20:22:42 | DEBUG | o.h.j.HibernatePersistenceProvider | Checking persistence-unit [name=clinic, explicit-provider=null] against incoming persistence unit name [fileReader]
2022-11-14 20:22:42 | DEBUG | o.h.j.HibernatePersistenceProvider | Excluding from consideration due to name mis-match
2022-11-14 20:22:42 | DEBUG | o.h.j.HibernatePersistenceProvider | Found no matching persistence units
2022-11-14 20:25:04 | DEBUG | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:25:04 | DEBUG | o.j.logging | Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-11-14 20:25:04 | DEBUG | o.h.j.HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
2022-11-14 20:25:04 | DEBUG | o.h.j.HibernatePersistenceProvider | Checking persistence-unit [name=clinic, explicit-provider=null] against incoming persistence unit name [fileReader]
2022-11-14 20:25:04 | DEBUG | o.h.j.HibernatePersistenceProvider | Excluding from consideration due to name mis-match
2022-11-14 20:25:04 | DEBUG | o.h.j.HibernatePersistenceProvider | Found no matching persistence units
2022-11-14 20:27:32 | DEBUG | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:27:32 | DEBUG | o.j.logging | Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-11-14 20:27:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
2022-11-14 20:27:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Checking persistence-unit [name=clinic, explicit-provider=null] against incoming persistence unit name [fileReader]
2022-11-14 20:27:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Excluding from consideration due to name mis-match
2022-11-14 20:27:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Found no matching persistence units
2022-11-14 20:29:17 | DEBUG | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:29:17 | DEBUG | o.j.logging | Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-11-14 20:29:17 | DEBUG | o.h.j.HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
2022-11-14 20:29:17 | DEBUG | o.h.j.HibernatePersistenceProvider | Checking persistence-unit [name=clinic, explicit-provider=null] against incoming persistence unit name [clinic]
2022-11-14 20:29:17 | DEBUG | o.h.j.b.s.ProviderChecker | No PersistenceProvider explicitly requested, assuming Hibernate
2022-11-14 20:29:17 | DEBUG | o.h.j.i.u.LogHelper | PersistenceUnitInfo [
	name: clinic
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Havij1234@
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:postgresql://localhost:5432/clinic
		jakarta.persistence.jdbc.driver: org.postgresql.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: postgres]
2022-11-14 20:29:17 | DEBUG | o.h.i.i.IntegratorServiceImpl | Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-11-14 20:29:17 | DEBUG | o.h.i.i.IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-11-14 20:29:17 | INFO  | o.h.Version | HHH000412: Hibernate ORM core version 6.1.4.Final
2022-11-14 20:29:17 | DEBUG | o.h.c.Environment | HHH000206: hibernate.properties not found
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-11-14 20:29:18 | DEBUG | o.h.c.i.RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-11-14 20:29:18 | DEBUG | o.h.c.i.RegionFactoryInitiator | Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-11-14 20:29:18 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@12cd9150
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@12cd9150
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@114a85c2
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@114a85c2
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@f415a95
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@f415a95
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration binary -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [B -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration image -> org.hibernate.type.BasicTypeReference@32fe9d0a
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration blob -> org.hibernate.type.BasicTypeReference@c9413d8
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@c9413d8
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64da2a7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@46074492
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration integer -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration int -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21694e53
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21694e53
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72b16078
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72b16078
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration character -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration char -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70fab835
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration string -> org.hibernate.type.BasicTypeReference@1b0a7baf
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b0a7baf
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62417a16
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration characters -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [C -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration text -> org.hibernate.type.BasicTypeReference@6ea1bcdc
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@759fad4
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration clob -> org.hibernate.type.BasicTypeReference@64712be
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64712be
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@53499d85
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@53499d85
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ed9c6c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@782a4fff
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@46c670a6
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59fc684e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ae81e1
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2fd1731c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ae76500
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ae76500
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6063d80a
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6063d80a
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1133ec6e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1133ec6e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@355e34c7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@355e34c7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@54709809
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@54709809
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2da905
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24f360b2
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60cf80e7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60cf80e7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@302fec27
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@302fec27
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@770d0ea6
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48c40605
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration date -> org.hibernate.type.BasicTypeReference@54107f42
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@54107f42
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration time -> org.hibernate.type.BasicTypeReference@1b11ef33
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1b11ef33
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bd7f8dc
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2f2bf0e2
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration instant -> org.hibernate.type.BasicTypeReference@1eba372c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1eba372c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25f9407e
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@552518c3
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration class -> org.hibernate.type.BasicTypeReference@1a69561c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a69561c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration locale -> org.hibernate.type.BasicTypeReference@363f6148
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@363f6148
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4b21844c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4b21844c
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1b28f282
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1b28f282
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@138fe6ec
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@138fe6ec
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration url -> org.hibernate.type.BasicTypeReference@5e77f0f4
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5e77f0f4
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19b30c92
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@660e9100
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@660e9100
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration object -> org.hibernate.type.JavaObjectType@3dd69f5a
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3dd69f5a
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration null -> org.hibernate.type.NullType@9573b3b
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@67427b69
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78461bc4
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@544630b7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64f857e7
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1095f122
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@58c540cf
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3d6300e8
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b822fcc
2022-11-14 20:29:18 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@46cc127b] into BootstrapContext; was [null]
2022-11-14 20:29:18 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60094a13] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5aceec94]
2022-11-14 20:29:18 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-11-14 20:29:18 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:29:18 | INFO  | o.h.o.c.pooling | HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2022-11-14 20:29:18 | INFO  | o.h.o.c.pooling | HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/clinic]
2022-11-14 20:29:18 | INFO  | o.h.o.c.pooling | HHH10001001: Connection properties: {password=Havij1234@, user=postgres}
2022-11-14 20:29:18 | INFO  | o.h.o.c.pooling | HHH10001003: Autocommit mode: false
2022-11-14 20:29:18 | DEBUG | o.h.o.c.pooling | Initializing Connection pool with 1 Connections
2022-11-14 20:29:18 | INFO  | o.h.o.c.pooling | HHH10001115: Connection pool size: 20 (min=1)
2022-11-14 20:29:18 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | Database ->
       name : PostgreSQL
    version : 14.4
      major : 14
      minor : 4
2022-11-14 20:29:18 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.5.0
      major : 42
      minor : 5
2022-11-14 20:29:18 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | JDBC version : 4.2
2022-11-14 20:29:18 | INFO  | SQL dialect | HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2022-11-14 20:29:18 | DEBUG | o.h.e.j.e.s.IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-11-14 20:29:18 | DEBUG | o.h.t.d.s.s.DdlTypeRegistry | addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@6441c486) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@834831b)
2022-11-14 20:29:18 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2022-11-14 20:29:18 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-11-14 20:29:18 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@c6a6c1d
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@c6a6c1d
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3dd69f5a`
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:29:18 | DEBUG | o.h.t.s.TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aa99005] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@592238c5]
2022-11-14 20:29:18 | DEBUG | o.h.b.m.r.Namespace | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-11-14 20:29:18 | DEBUG | o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl | Skipping explicit MappedSuperclass taha.clinic.base.entity.BaseEntity, the class will be discovered analyzing the implementing class
2022-11-14 20:29:18 | DEBUG | o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl | Skipping explicit MappedSuperclass taha.readFile.base.entity.BaseEntity, the class will be discovered analyzing the implementing class
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Hospital on table Hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Hospital] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='clinicList_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:name]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Doctor on table Doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Doctor] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=clinic, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=isAvailable, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property isAvailable with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:isAvailable]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for isAvailable
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.isAvailable
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property isAvailable
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=person, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property person
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property speciality with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:speciality]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for speciality
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.speciality
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property speciality
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Student
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.Student on table Student
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Student] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='courses_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Student.courses
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property courses
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property firstname with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:firstname]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for firstname
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.firstname
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property firstname
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property lastname with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:lastname]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for lastname
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.lastname
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property lastname
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='studentCourseRatings_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Patient
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Patient on table Patient
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Patient] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='user_account_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Course
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.Course on table Course
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Course] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:name]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='studentCourseRatings_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='students_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Course.students
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property students
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.StudentCourseRating on table StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourseRating] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=course, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property course
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property description with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:description]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for description
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.description
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property description
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=rate, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property rate with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:rate]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for rate
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.rate
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property rate
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=student, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property student
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.StudentCourse on table StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourse] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=course, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property course
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=student, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property student
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Secretary
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Secretary
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Secretary on table Secretary
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Secretary] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Secretary
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='user_account_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Appointment on table Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Appointment] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property date with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:date]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for date
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.date
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property date
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='doctor_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=doctor, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=fromTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property fromTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:fromTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for fromTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.fromTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property fromTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='medical_record_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=status, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property status with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:status]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for status
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.status
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property status
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=thruTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property thruTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:thruTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for thruTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.thruTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property thruTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.MedicalRecord on table MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.MedicalRecord] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='appointments_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property appointments
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='prescriptions_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property prescriptions
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.UserAccount on table UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.UserAccount] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property accountType with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:accountType]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for accountType
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.accountType
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property accountType
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property password with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:password]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for password
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.password
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property password
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=person, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property person
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property username with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:username]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for username
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.username
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property username
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Prescription on table Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Prescription] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=doctor, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=drugs_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=drugs_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='drugs_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='drugs_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Prescription.drugs
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property drugs
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='medical_record_id', referencedColumn='', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Drug
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Drug on table Drug
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Drug] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=dose, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property dose with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:dose]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for dose
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.dose
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property dose
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:name]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Person
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Person on table Person
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Person] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property firstName with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:firstName]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for firstName
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.firstName
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property firstName
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property lastName with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:lastName]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for lastName
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.lastName
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property lastName
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=nationalCode, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property nationalCode with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:nationalCode]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for nationalCode
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.nationalCode
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property nationalCode
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Clinic on table Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Clinic] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:id]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:29:18 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:createDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:updateDateTime]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='clinicList_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=hospital, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:29:18 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:name]
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:29:18 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for speciality
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for firstname
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for lastname
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for description
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for rate
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for date
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for fromTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for status
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for thruTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for accountType
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for password
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for username
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for dose
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for firstName
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for lastName
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for nationalCode
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:29:18 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [hospital]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [student]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [patient]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [course]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [studentcourserating]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [studentcourse]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [secretary]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [appointment]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [medicalrecord]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [useraccount]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [prescription]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [drug]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [person]
2022-11-14 20:29:18 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [clinic]
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Prescription.drugs
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a ManyToMany: taha.clinic.entity.Prescription.drugs
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: prescription_id, element: drugs_id
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.Hospital.clinicList through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.Hospital.clinicList -> Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Clinic.hospital
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: hospital_id, one-to-many: taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Student.courses
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Student.courses through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Student.courses -> StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourse.student
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: student_id, one-to-many: taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Student.studentCourseRatings through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Student.studentCourseRatings -> StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourseRating.student
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: student_id, one-to-many: taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Course.studentCourseRatings through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Course.studentCourseRatings -> StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourseRating.course
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: course_id, one-to-many: taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Course.students
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Course.students through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Course.students -> StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourse.course
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: course_id, one-to-many: taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.MedicalRecord.appointments through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.MedicalRecord.appointments -> Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Appointment.medicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: medical_record_id, one-to-many: taha.clinic.entity.Appointment
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.MedicalRecord.prescriptions through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.MedicalRecord.prescriptions -> Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Prescription.medicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: medical_record_id, one-to-many: taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.Clinic.clinicList through a foreign key
2022-11-14 20:29:18 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.Clinic.clinicList -> Doctor
2022-11-14 20:29:18 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Doctor.clinic
2022-11-14 20:29:18 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: clinic_id, one-to-many: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.i.SessionFactoryImpl | Building session factory
2022-11-14 20:29:18 | DEBUG | o.h.s.i.SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-11-14 20:29:18 | DEBUG | o.h.i.SessionFactoryImpl | Session factory constructed with filter configurations : {}
2022-11-14 20:29:18 | DEBUG | o.h.i.SessionFactoryImpl | Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=19, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21/target/classes:/Users/tahamohammadi/.m2/repository/org/hibernate/orm/hibernate-core/6.1.4.Final/hibernate-core-6.1.4.Final.jar:/Users/tahamohammadi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/Users/tahamohammadi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.0/jakarta.transaction-api-2.0.0.jar:/Users/tahamohammadi/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/tahamohammadi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.2.Final/hibernate-commons-annotations-6.0.2.Final.jar:/Users/tahamohammadi/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/tahamohammadi/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/tahamohammadi/.m2/repository/net/bytebuddy/byte-buddy/1.12.9/byte-buddy-1.12.9.jar:/Users/tahamohammadi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/3.0.1/jakarta.xml.bind-api-3.0.1.jar:/Users/tahamohammadi/.m2/repository/com/sun/activation/jakarta.activation/2.0.1/jakarta.activation-2.0.1.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/3.0.2/jaxb-runtime-3.0.2.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/jaxb-core/3.0.2/jaxb-core-3.0.2.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/txw2/3.0.2/txw2-3.0.2.jar:/Users/tahamohammadi/.m2/repository/com/sun/istack/istack-commons-runtime/4.0.1/istack-commons-runtime-4.0.1.jar:/Users/tahamohammadi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.0/jakarta.inject-api-2.0.0.jar:/Users/tahamohammadi/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/tahamohammadi/.m2/repository/org/postgresql/postgresql/42.5.0/postgresql-42.5.0.jar:/Users/tahamohammadi/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/tahamohammadi/.m2/repository/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar:/Users/tahamohammadi/.m2/repository/org/jetbrains/annotations/23.0.0/annotations-23.0.0.jar:/Users/tahamohammadi/.m2/repository/org/apache/logging/log4j/log4j-api/2.19.0/log4j-api-2.19.0.jar:/Users/tahamohammadi/.m2/repository/org/apache/logging/log4j/log4j-core/2.19.0/log4j-core-2.19.0.jar:/Users/tahamohammadi/.m2/repository/com/github/javafaker/javafaker/1.0.2/javafaker-1.0.2.jar:/Users/tahamohammadi/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/Users/tahamohammadi/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23-android.jar:/Users/tahamohammadi/.m2/repository/com/github/mifmif/generex/1.0.2/generex-1.0.2.jar:/Users/tahamohammadi/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar, java.vm.vendor=Homebrew, sun.arch.data.model=64, java.vendor.url=https://github.com/Homebrew/homebrew-core/issues, user.timezone=Asia/Tehran, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/clinic, java.vm.specification.version=19, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/opt/homebrew/Cellar/openjdk/19/libexec/openjdk.jdk/Contents/Home/lib, sun.java.command=taha.readFile.Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/tahamohammadi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-09-20, java.home=/opt/homebrew/Cellar/openjdk/19/libexec/openjdk.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=clinic, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, apple.awt.application.name=Main, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=19, user.name=tahamohammadi, stdout.encoding=UTF-8, path.separator=:, hibernate.connection.username=****, os.version=12.6, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/clinic, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Homebrew, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/Homebrew/homebrew-core/issues, java.io.tmpdir=/var/folders/pg/8k22tvbx1v117vj8gd653v580000gn/T/, java.version=19, user.dir=/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/clinic, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2630dbc4, native.encoding=UTF-8, java.library.path=/Users/tahamohammadi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Homebrew, java.vm.info=mixed mode, sharing, java.vm.version=19, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=63.0}
2022-11-14 20:29:18 | DEBUG | o.h.i.SessionFactoryImpl | Instantiated session factory
2022-11-14 20:29:18 | DEBUG | o.h.o.q.p.cache | Starting QueryPlanCache(2048)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3fd9e827] under count; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6a6f6c7e] under every; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6c5ddccd] under any; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : length -> character_length
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@69d45cca] under position; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2e73d5eb] under overlay; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7ff8a9dc] under trim; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@71e35c4] under cast; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@655a01d8] under collate; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@7847ef2c] under extract; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@41dc0598] under ifnull; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@60d40ff4] under pad; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@fe7b6b0] under str; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7d7cac8] under format; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@441b8382] under timestampadd; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@11c3ff67] under timestampdiff; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : dateadd -> timestampadd
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : datediff -> timestampdiff
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79a7bfbc] under current_date; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77f68df] under current_time; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3e4e4c1] under current_timestamp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current date -> current_date
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current time -> current_time
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current timestamp -> current_timestamp
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7e7f3cfd] under local_date; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ae126d1] under local_time; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46a488c2] under local_datetime; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6242ae3b] under offset_datetime; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local date -> local_date
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local time -> local_time
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local datetime -> local_datetime
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : offset datetime -> offset_datetime
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65ddee5a] under instant; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current_instant -> instant
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@49d831c2] under sql; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53a7a60c] under round; prior registration was NamedSqmFunctionTemplate(round)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(trunc)] under trunc; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@600f5704] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3ae126d1
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@46a488c2
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2503ec73] under date_trunc; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@7ee8130e] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : length -> character_length
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@6296474f] under bit_length; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@4288d98e] under octet_length; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : char -> chr
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@169268a7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@69d45cca
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285c6918] under bitand; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78a0ff63] under bitor; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c601d50] under bitxor; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@79b2852b] under bitnot; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : every -> bool_and
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : any -> bool_or
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@326d27ac] under median; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@313f8301] under insert; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4b0b64cc] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2e73d5eb
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@59ce792e] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@4fa822ad] under listagg; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@303f1234] under mode; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@24d61e4] under percentile_cont; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2149594a] under percentile_disc; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@553bc36c] under rank; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@380e1909] under dense_rank; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2d5ef498] under percent_rank; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@95eb320] under cume_dist; prior registration was null
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@6c6017b9] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-11-14 20:29:18 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@4730e0f0] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | abs(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double acos(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean any(BOOLEAN arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer ascii(STRING arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double asin(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double atan(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double avg(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bit_and(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer bit_length(STRING_OR_CLOB arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bit_or(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bitand(arg0, arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bitnot(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bitor(arg0, arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | bitxor(arg0, arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean bool_and(BOOLEAN predicate)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean bool_or(BOOLEAN predicate)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | cast(arg as Type)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double cbrt(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | ceiling(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer character_length(STRING_OR_CLOB arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Character chr(INTEGER arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | coalesce(arg0[, arg1[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String collate(STRING string as COLLATION collation)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | (STRING string0[, STRING string1[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double corr(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double cos(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double cot(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Long count([distinct ]{arg|*})
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double cume_dist([arg0[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Date current_date
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Time current_time
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp current_timestamp
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp date_trunc(TEMPORAL_UNIT field, TEMPORAL datetime)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double degrees(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Long dense_rank([arg0[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean every(BOOLEAN arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double exp(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | first_valueANY value
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | floor(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String format(TEMPORAL datetime as STRING pattern)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | ifnull(arg0, arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String initcap(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Instant instant
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | lagANY value[, INTEGER offset[, ANY default]]
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | last_valueANY value
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | leadANY value[, INTEGER offset[, ANY default]]
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String left(STRING string, INTEGER length)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String listagg(STRING arg0, STRING arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double ln(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalDate local_date
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalDateTime local_datetime
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalTime local_time
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Time localtime
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp localtimestamp
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double log(NUMERIC arg0[, NUMERIC arg1])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double log10(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String lower(STRING string)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String lpad(STRING string, INTEGER length[, STRING padding])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String ltrim(STRING string[, STRING characters])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | max(COMPARABLE arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String md5(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double median(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | min(COMPARABLE arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer mod(INTEGER arg0, INTEGER arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | mode()
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | nth_valueANY value, INTEGER nth
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | nullif(arg0, arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer octet_length(STRING_OR_CLOB arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | OffsetDateTime offset_datetime
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String overlay(string placing replacement from start[ for length])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double percent_rank([arg0[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | percentile_cont(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | percentile_disc(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer position(STRING pattern in STRING string)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double power(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double radians(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Long rank([arg0[, ...]])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_count(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String repeat(STRING string, INTEGER times)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String replace(STRING string, STRING pattern, STRING replacement)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String right(STRING string, INTEGER length)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | round(NUMERIC arg0, INTEGER arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Long row_number()
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String rpad(STRING string, INTEGER length[, STRING padding])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String rtrim(STRING string[, STRING characters])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer sign(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double sin(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String soundex(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Object sql
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double sqrt(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev_pop(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev_samp(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String str(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String substr(STRING string, INTEGER start[, INTEGER length])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | sum(arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double tan(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | basicType@3(java.lang.Long,-5)|basicType@7(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String to_char(ANY arg0[, STRING arg1, STRING arg2])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String translate(STRING arg0, STRING arg1, STRING arg2)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double trunc(NUMERIC number[, INTEGER places])
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | String upper(STRING string)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double var_pop(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double var_samp(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Double variance(NUMERIC arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean any(BOOLEAN predicate)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Character char(INTEGER arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Date current date
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Time current time
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp current timestamp
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Instant current_instant
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | basicType@3(java.lang.Long,-5)|basicType@7(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Boolean every(BOOLEAN predicate)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | Integer length(STRING_OR_CLOB arg)
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalDate local date
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalDateTime local datetime
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | LocalTime local time
2022-11-14 20:29:18 | DEBUG | o.h.HQL_FUNCTIONS | OffsetDateTime offset datetime
2022-11-14 20:29:18 | DEBUG | o.h.t.s.TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1aa99005] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2f0bfe17]
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Hospital] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Doctor] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Student] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Patient] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Course] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourseRating] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourse] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Secretary] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Secretary
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Appointment] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Appointment
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.MedicalRecord] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.UserAccount] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Prescription] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Drug] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Person] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Clinic] is safe
2022-11-14 20:29:18 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Doctor set clinic_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Doctor set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Doctor set clinic_id=null where clinic_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Doctor set clinic_id=null where clinic_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourseRating set student_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourseRating set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourseRating set student_id=null where student_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourseRating set student_id=null where student_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Prescription.drugs
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: insert into Prescription_drugs (prescription_id, drugs_id) values (?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Prescription_drugs set drugs_id=? where prescription_id=? and drugs_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: delete from Prescription_drugs where prescription_id=? and drugs_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: delete from Prescription_drugs where prescription_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Clinic set hospital_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Clinic set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Clinic set hospital_id=null where hospital_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Clinic set hospital_id=null where hospital_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourseRating set course_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourseRating set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourseRating set course_id=null where course_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourseRating set course_id=null where course_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Appointment set medical_record_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Appointment set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Appointment set medical_record_id=null where medical_record_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Appointment set medical_record_id=null where medical_record_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Course.students
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourse set course_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourse set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourse set course_id=null where course_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourse set course_id=null where course_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Prescription set medical_record_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Prescription set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Prescription set medical_record_id=null where medical_record_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Prescription set medical_record_id=null where medical_record_id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Student.courses
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourse set student_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourse set  where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourse set student_id=null where student_id=? and id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourse set student_id=null where student_id=?
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting post-init callbacks
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Hospital.clinicList#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.clinic.entity.Clinic.hospital])@199320792
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Hospital.clinicList)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Hospital.clinicList) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Hospital) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.clinic]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.person]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.userAccount]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Doctor) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.courses#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourse.student])@318550723
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.courses)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.courses) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourseRating.student])@2009900903
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.studentCourseRatings)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.studentCourseRatings) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.Student) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Patient.medicalRecord]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Patient.userAccount]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Patient) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourseRating.course])@379833480
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.studentCourseRatings)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.studentCourseRatings) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.students#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourse.course])@1195854264
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.students)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.students) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.Course) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourseRating.course]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourseRating.student]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.StudentCourseRating) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourse.course]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourse.student]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.StudentCourse) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Secretary.userAccount]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Secretary) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.doctor]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.medicalRecord]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.patient]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Appointment) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.appointments#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.appointments)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.appointments) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.MedicalRecord.patient]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.prescriptions#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.clinic.entity.Prescription.medicalRecord])@561890446
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.prescriptions)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.prescriptions) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.MedicalRecord) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.UserAccount.person]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.UserAccount) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.doctor]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Prescription.drugs#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Prescription.drugs)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Prescription.drugs) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.medicalRecord]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.patient]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Prescription) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Drug) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Person) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Clinic.clinicList#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Clinic.clinicList)#finishInitialization
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Clinic.clinicList) - key descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Clinic.hospital]
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Clinic) `staticFetchableList` generator
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Hospital.clinicList#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.courses#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.students#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.prescriptions#{element}]) - index descriptor
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Hospital
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Hospital where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Hospital (createDateTime, name, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Hospital set createDateTime=?, name=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Hospital where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Hospital (createDateTime, name, updateDateTime) values (?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Hospital)] with identifierForTableGroup [taha.clinic.entity.Hospital] for NavigablePath [taha.clinic.entity.Hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Hospital]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Hospital.clinicList]
 |  +-BasicFetch [taha.clinic.entity.Hospital.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Hospital.name]
 |  \-BasicFetch [taha.clinic.entity.Hospital.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (h1 : taha.clinic.entity.Hospital) {
          primaryTableReference : Hospital as h1_0
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Doctor
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Doctor where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Doctor (clinic_id, createDateTime, isAvailable, person_id, speciality, updateDateTime, userAccount_id, id) values (?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Doctor set clinic_id=?, createDateTime=?, isAvailable=?, person_id=?, speciality=?, updateDateTime=?, userAccount_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Doctor where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Doctor (clinic_id, createDateTime, isAvailable, person_id, speciality, updateDateTime, userAccount_id) values (?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Doctor)] with identifierForTableGroup [taha.clinic.entity.Doctor] for NavigablePath [taha.clinic.entity.Doctor] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@578a5ce8] with identifierForTableGroup [taha.clinic.entity.Doctor.clinic] for NavigablePath [taha.clinic.entity.Doctor.clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6222391a] with identifierForTableGroup [taha.clinic.entity.Doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Doctor.clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2313db84] with identifierForTableGroup [taha.clinic.entity.Doctor.person] for NavigablePath [taha.clinic.entity.Doctor.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@216372b7] with identifierForTableGroup [taha.clinic.entity.Doctor.userAccount] for NavigablePath [taha.clinic.entity.Doctor.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14b4340c] with identifierForTableGroup [taha.clinic.entity.Doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Doctor.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Doctor]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.clinic]
 |  +-BasicFetch [taha.clinic.entity.Doctor.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Doctor.isAvailable]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.person]
 |  +-BasicFetch [taha.clinic.entity.Doctor.speciality]
 |  +-BasicFetch [taha.clinic.entity.Doctor.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.userAccount]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : taha.clinic.entity.Doctor) {
          primaryTableReference : Doctor as d1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.clinic.entity.Doctor.clinic) {
              primaryTableReference : Clinic as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (h1 : taha.clinic.entity.Doctor.clinic.hospital) {
                  primaryTableReference : Hospital as h1_0
                }
              }
            }
            left  join LazyTableGroup (p1 : taha.clinic.entity.Doctor.person) {
              primaryTableReference : Person as p1_0
            }
            left  join LazyTableGroup (u1 : taha.clinic.entity.Doctor.userAccount) {
              primaryTableReference : UserAccount as u1_0
              TableGroupJoins {
                left  join LazyTableGroup (p2 : taha.clinic.entity.Doctor.userAccount.person) {
                  primaryTableReference : Person as p2_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.Student
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Student where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Student (createDateTime, firstname, lastname, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Student set createDateTime=?, firstname=?, lastname=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Student where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Student (createDateTime, firstname, lastname, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student)] with identifierForTableGroup [taha.readFile.entity.Student] for NavigablePath [taha.readFile.entity.Student] 
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.Student]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Student.courses]
 |  +-BasicFetch [taha.readFile.entity.Student.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.Student.firstname]
 |  +-BasicFetch [taha.readFile.entity.Student.lastname]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Student.studentCourseRatings]
 |  \-BasicFetch [taha.readFile.entity.Student.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.Student) {
          primaryTableReference : Student as s1_0
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Patient
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Patient where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Patient (createDateTime, medicalRecord_id, updateDateTime, user_account_id, id) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Patient set createDateTime=?, medicalRecord_id=?, updateDateTime=?, user_account_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Patient where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Patient (createDateTime, medicalRecord_id, updateDateTime, user_account_id) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Patient)] with identifierForTableGroup [taha.clinic.entity.Patient] for NavigablePath [taha.clinic.entity.Patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@cdb3c85] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord] for NavigablePath [taha.clinic.entity.Patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37606fee] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@252ec02e] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11e9ac24] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@74f280bd] with identifierForTableGroup [taha.clinic.entity.Patient.userAccount] for NavigablePath [taha.clinic.entity.Patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@675b18ff] with identifierForTableGroup [taha.clinic.entity.Patient.userAccount.person] for NavigablePath [taha.clinic.entity.Patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Patient]
 |  +-BasicFetch [taha.clinic.entity.Patient.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Patient.medicalRecord]
 |  +-BasicFetch [taha.clinic.entity.Patient.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Patient.userAccount]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Patient) {
          primaryTableReference : Patient as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : taha.clinic.entity.Patient.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p2 : taha.clinic.entity.Patient.medicalRecord.patient) {
                  primaryTableReference : Patient as p2_0
                  TableGroupJoins {
                    left  join LazyTableGroup (u1 : taha.clinic.entity.Patient.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u1_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p3 : taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p3_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (u2 : taha.clinic.entity.Patient.userAccount) {
              primaryTableReference : UserAccount as u2_0
              TableGroupJoins {
                left  join LazyTableGroup (p4 : taha.clinic.entity.Patient.userAccount.person) {
                  primaryTableReference : Person as p4_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.Course
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Course where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Course (createDateTime, name, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Course set createDateTime=?, name=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Course where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Course (createDateTime, name, updateDateTime) values (?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course)] with identifierForTableGroup [taha.readFile.entity.Course] for NavigablePath [taha.readFile.entity.Course] 
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.Course]
 |  +-BasicFetch [taha.readFile.entity.Course.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.Course.name]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Course.studentCourseRatings]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Course.students]
 |  \-BasicFetch [taha.readFile.entity.Course.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : taha.readFile.entity.Course) {
          primaryTableReference : Course as c1_0
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.StudentCourseRating
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from StudentCourseRating where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into StudentCourseRating (createDateTime, description, rate, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update StudentCourseRating set createDateTime=?, description=?, rate=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from StudentCourseRating where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into StudentCourseRating (createDateTime, description, rate, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.StudentCourseRating)] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating] for NavigablePath [taha.readFile.entity.StudentCourseRating] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8641b7d] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating.course] for NavigablePath [taha.readFile.entity.StudentCourseRating.course] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37c7766e] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating.student] for NavigablePath [taha.readFile.entity.StudentCourseRating.student] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.StudentCourseRating]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourseRating.course]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.description]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.rate]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourseRating.student]
 |  \-BasicFetch [taha.readFile.entity.StudentCourseRating.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.StudentCourseRating) {
          primaryTableReference : StudentCourseRating as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.readFile.entity.StudentCourseRating.course) {
              primaryTableReference : Course as c1_0
            }
            left  join LazyTableGroup (s2 : taha.readFile.entity.StudentCourseRating.student) {
              primaryTableReference : Student as s2_0
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.StudentCourse
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from StudentCourse where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into StudentCourse (createDateTime, updateDateTime, id) values (?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update StudentCourse set createDateTime=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from StudentCourse where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into StudentCourse (createDateTime, updateDateTime) values (?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.StudentCourse)] with identifierForTableGroup [taha.readFile.entity.StudentCourse] for NavigablePath [taha.readFile.entity.StudentCourse] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b7ed03e] with identifierForTableGroup [taha.readFile.entity.StudentCourse.course] for NavigablePath [taha.readFile.entity.StudentCourse.course] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@636985df] with identifierForTableGroup [taha.readFile.entity.StudentCourse.student] for NavigablePath [taha.readFile.entity.StudentCourse.student] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.StudentCourse]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourse.course]
 |  +-BasicFetch [taha.readFile.entity.StudentCourse.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourse.student]
 |  \-BasicFetch [taha.readFile.entity.StudentCourse.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.StudentCourse) {
          primaryTableReference : StudentCourse as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.readFile.entity.StudentCourse.course) {
              primaryTableReference : Course as c1_0
            }
            left  join LazyTableGroup (s2 : taha.readFile.entity.StudentCourse.student) {
              primaryTableReference : Student as s2_0
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Secretary
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Secretary where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Secretary (createDateTime, updateDateTime, user_account_id, id) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Secretary set createDateTime=?, updateDateTime=?, user_account_id=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Secretary where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Secretary (createDateTime, updateDateTime, user_account_id) values (?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Secretary)] with identifierForTableGroup [taha.clinic.entity.Secretary] for NavigablePath [taha.clinic.entity.Secretary] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@723e3c17] with identifierForTableGroup [taha.clinic.entity.Secretary.userAccount] for NavigablePath [taha.clinic.entity.Secretary.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ffced4e] with identifierForTableGroup [taha.clinic.entity.Secretary.userAccount.person] for NavigablePath [taha.clinic.entity.Secretary.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Secretary]
 |  +-BasicFetch [taha.clinic.entity.Secretary.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Secretary.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Secretary.userAccount]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.clinic.entity.Secretary) {
          primaryTableReference : Secretary as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : taha.clinic.entity.Secretary.userAccount) {
              primaryTableReference : UserAccount as u1_0
              TableGroupJoins {
                left  join LazyTableGroup (p1 : taha.clinic.entity.Secretary.userAccount.person) {
                  primaryTableReference : Person as p1_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Appointment
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Appointment where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Appointment (createDateTime, date, doctor_id, fromTime, medical_record_id, patient_id, status, thruTime, updateDateTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Appointment set createDateTime=?, date=?, doctor_id=?, fromTime=?, medical_record_id=?, patient_id=?, status=?, thruTime=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Appointment where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Appointment (createDateTime, date, doctor_id, fromTime, medical_record_id, patient_id, status, thruTime, updateDateTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : a1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Appointment)] with identifierForTableGroup [taha.clinic.entity.Appointment] for NavigablePath [taha.clinic.entity.Appointment] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bbb6f0] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor] for NavigablePath [taha.clinic.entity.Appointment.doctor] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e6ec74] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.clinic] for NavigablePath [taha.clinic.entity.Appointment.doctor.clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bd8f7db] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Appointment.doctor.clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d7ad0f5] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.person] for NavigablePath [taha.clinic.entity.Appointment.doctor.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30abf79c] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.userAccount] for NavigablePath [taha.clinic.entity.Appointment.doctor.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49a38b1] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.doctor.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@681061d6] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53d6e959] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3caee3a8] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69a40b3c] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@251c90f] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6629643d] with identifierForTableGroup [taha.clinic.entity.Appointment.patient] for NavigablePath [taha.clinic.entity.Appointment.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2dd178f3] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64656b9e] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6870cfac] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45554613] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@63e5b8aa] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2c9306d3] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p8_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Appointment]
 |  +-BasicFetch [taha.clinic.entity.Appointment.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Appointment.date]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.doctor]
 |  +-BasicFetch [taha.clinic.entity.Appointment.fromTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.medicalRecord]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.patient]
 |  +-BasicFetch [taha.clinic.entity.Appointment.status]
 |  +-BasicFetch [taha.clinic.entity.Appointment.thruTime]
 |  \-BasicFetch [taha.clinic.entity.Appointment.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : taha.clinic.entity.Appointment) {
          primaryTableReference : Appointment as a1_0
          TableGroupJoins {
            left  join LazyTableGroup (d1 : taha.clinic.entity.Appointment.doctor) {
              primaryTableReference : Doctor as d1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : taha.clinic.entity.Appointment.doctor.clinic) {
                  primaryTableReference : Clinic as c1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (h1 : taha.clinic.entity.Appointment.doctor.clinic.hospital) {
                      primaryTableReference : Hospital as h1_0
                    }
                  }
                }
                left  join LazyTableGroup (p1 : taha.clinic.entity.Appointment.doctor.person) {
                  primaryTableReference : Person as p1_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.Appointment.doctor.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p2 : taha.clinic.entity.Appointment.doctor.userAccount.person) {
                      primaryTableReference : Person as p2_0
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (m1 : taha.clinic.entity.Appointment.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p3 : taha.clinic.entity.Appointment.medicalRecord.patient) {
                  primaryTableReference : Patient as p3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (m2 : taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord) {
                      primaryTableReference : MedicalRecord as m2_0
                    }
                    left  join LazyTableGroup (u2 : taha.clinic.entity.Appointment.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u2_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p4 : taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p4_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (p5 : taha.clinic.entity.Appointment.patient) {
              primaryTableReference : Patient as p5_0
              TableGroupJoins {
                left  join LazyTableGroup (m3 : taha.clinic.entity.Appointment.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p6 : taha.clinic.entity.Appointment.patient.medicalRecord.patient) {
                      primaryTableReference : Patient as p6_0
                      TableGroupJoins {
                        left  join LazyTableGroup (u3 : taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount) {
                          primaryTableReference : UserAccount as u3_0
                          TableGroupJoins {
                            left  join LazyTableGroup (p7 : taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person) {
                              primaryTableReference : Person as p7_0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                left  join LazyTableGroup (u4 : taha.clinic.entity.Appointment.patient.userAccount) {
                  primaryTableReference : UserAccount as u4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p8 : taha.clinic.entity.Appointment.patient.userAccount.person) {
                      primaryTableReference : Person as p8_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.MedicalRecord
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from MedicalRecord where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into MedicalRecord (createDateTime, patient_id, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update MedicalRecord set createDateTime=?, patient_id=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from MedicalRecord where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into MedicalRecord (createDateTime, patient_id, updateDateTime) values (?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord)] with identifierForTableGroup [taha.clinic.entity.MedicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2dfa02c1] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6314df3c] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5785e813] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10b8b900] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.MedicalRecord]
 |  +-DelayedCollectionFetch [taha.clinic.entity.MedicalRecord.appointments]
 |  +-BasicFetch [taha.clinic.entity.MedicalRecord.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.MedicalRecord.patient]
 |  +-DelayedCollectionFetch [taha.clinic.entity.MedicalRecord.prescriptions]
 |  \-BasicFetch [taha.clinic.entity.MedicalRecord.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : taha.clinic.entity.MedicalRecord) {
          primaryTableReference : MedicalRecord as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : taha.clinic.entity.MedicalRecord.patient) {
              primaryTableReference : Patient as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (m2 : taha.clinic.entity.MedicalRecord.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m2_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.MedicalRecord.patient.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p2 : taha.clinic.entity.MedicalRecord.patient.userAccount.person) {
                      primaryTableReference : Person as p2_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.UserAccount
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from UserAccount where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into UserAccount (accountType, createDateTime, password, person_id, updateDateTime, username, id) values (?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update UserAccount set accountType=?, createDateTime=?, password=?, person_id=?, updateDateTime=?, username=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from UserAccount where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into UserAccount (accountType, createDateTime, password, person_id, updateDateTime, username) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.UserAccount)] with identifierForTableGroup [taha.clinic.entity.UserAccount] for NavigablePath [taha.clinic.entity.UserAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2801827a] with identifierForTableGroup [taha.clinic.entity.UserAccount.person] for NavigablePath [taha.clinic.entity.UserAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.UserAccount]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.accountType]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.password]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.UserAccount.person]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.updateDateTime]
 |  \-BasicFetch [taha.clinic.entity.UserAccount.username]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : taha.clinic.entity.UserAccount) {
          primaryTableReference : UserAccount as u1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : taha.clinic.entity.UserAccount.person) {
              primaryTableReference : Person as p1_0
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Prescription
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Prescription where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Prescription (createDateTime, doctor_id, medical_record_id, patient_id, updateDateTime, id) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Prescription set createDateTime=?, doctor_id=?, medical_record_id=?, patient_id=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Prescription where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Prescription (createDateTime, doctor_id, medical_record_id, patient_id, updateDateTime) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Prescription)] with identifierForTableGroup [taha.clinic.entity.Prescription] for NavigablePath [taha.clinic.entity.Prescription] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@599f1b7] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor] for NavigablePath [taha.clinic.entity.Prescription.doctor] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22791b75] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.clinic] for NavigablePath [taha.clinic.entity.Prescription.doctor.clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64f4f12] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Prescription.doctor.clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37d28938] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.person] for NavigablePath [taha.clinic.entity.Prescription.doctor.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d0cd23c] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.userAccount] for NavigablePath [taha.clinic.entity.Prescription.doctor.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17c4dc5b] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.doctor.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b0f266e] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4837f97e] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53314f76] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@62a6674f] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@70881123] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@703fa45] with identifierForTableGroup [taha.clinic.entity.Prescription.patient] for NavigablePath [taha.clinic.entity.Prescription.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5e905f2c] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@fddd7ae] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3f6cce7f] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2725ca05] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p8_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7b9088f2] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1a914089] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p9_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Prescription]
 |  +-BasicFetch [taha.clinic.entity.Prescription.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.doctor]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Prescription.drugs]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.medicalRecord]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.patient]
 |  \-BasicFetch [taha.clinic.entity.Prescription.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Prescription) {
          primaryTableReference : Prescription as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (d1 : taha.clinic.entity.Prescription.doctor) {
              primaryTableReference : Doctor as d1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : taha.clinic.entity.Prescription.doctor.clinic) {
                  primaryTableReference : Clinic as c1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (h1 : taha.clinic.entity.Prescription.doctor.clinic.hospital) {
                      primaryTableReference : Hospital as h1_0
                    }
                  }
                }
                left  join LazyTableGroup (p2 : taha.clinic.entity.Prescription.doctor.person) {
                  primaryTableReference : Person as p2_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.Prescription.doctor.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p3 : taha.clinic.entity.Prescription.doctor.userAccount.person) {
                      primaryTableReference : Person as p3_0
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (m1 : taha.clinic.entity.Prescription.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p4 : taha.clinic.entity.Prescription.medicalRecord.patient) {
                  primaryTableReference : Patient as p4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (m2 : taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord) {
                      primaryTableReference : MedicalRecord as m2_0
                    }
                    left  join LazyTableGroup (u2 : taha.clinic.entity.Prescription.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u2_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p5 : taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p5_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (p6 : taha.clinic.entity.Prescription.patient) {
              primaryTableReference : Patient as p6_0
              TableGroupJoins {
                left  join LazyTableGroup (m3 : taha.clinic.entity.Prescription.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p7 : taha.clinic.entity.Prescription.patient.medicalRecord.patient) {
                      primaryTableReference : Patient as p7_0
                      TableGroupJoins {
                        left  join LazyTableGroup (u3 : taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount) {
                          primaryTableReference : UserAccount as u3_0
                          TableGroupJoins {
                            left  join LazyTableGroup (p8 : taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person) {
                              primaryTableReference : Person as p8_0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                left  join LazyTableGroup (u4 : taha.clinic.entity.Prescription.patient.userAccount) {
                  primaryTableReference : UserAccount as u4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p9 : taha.clinic.entity.Prescription.patient.userAccount.person) {
                      primaryTableReference : Person as p9_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Drug
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Drug where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Drug (createDateTime, dose, name, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Drug set createDateTime=?, dose=?, name=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Drug where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Drug (createDateTime, dose, name, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Drug)] with identifierForTableGroup [taha.clinic.entity.Drug] for NavigablePath [taha.clinic.entity.Drug] 
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Drug]
 |  +-BasicFetch [taha.clinic.entity.Drug.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Drug.dose]
 |  +-BasicFetch [taha.clinic.entity.Drug.name]
 |  \-BasicFetch [taha.clinic.entity.Drug.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : taha.clinic.entity.Drug) {
          primaryTableReference : Drug as d1_0
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Person
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Person where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Person (createDateTime, firstName, lastName, nationalCode, updateDateTime, id) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Person set createDateTime=?, firstName=?, lastName=?, nationalCode=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Person where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Person (createDateTime, firstName, lastName, nationalCode, updateDateTime) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Person)] with identifierForTableGroup [taha.clinic.entity.Person] for NavigablePath [taha.clinic.entity.Person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Person]
 |  +-BasicFetch [taha.clinic.entity.Person.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Person.firstName]
 |  +-BasicFetch [taha.clinic.entity.Person.lastName]
 |  +-BasicFetch [taha.clinic.entity.Person.nationalCode]
 |  \-BasicFetch [taha.clinic.entity.Person.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Person) {
          primaryTableReference : Person as p1_0
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Clinic
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Clinic where id =?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Clinic (createDateTime, hospital_id, name, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Clinic set createDateTime=?, hospital_id=?, name=?, updateDateTime=? where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Clinic where id=?
2022-11-14 20:29:18 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Clinic (createDateTime, hospital_id, name, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Clinic)] with identifierForTableGroup [taha.clinic.entity.Clinic] for NavigablePath [taha.clinic.entity.Clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2506b881] with identifierForTableGroup [taha.clinic.entity.Clinic.hospital] for NavigablePath [taha.clinic.entity.Clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Clinic]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Clinic.clinicList]
 |  +-BasicFetch [taha.clinic.entity.Clinic.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Clinic.hospital]
 |  +-BasicFetch [taha.clinic.entity.Clinic.name]
 |  \-BasicFetch [taha.clinic.entity.Clinic.updateDateTime]

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : taha.clinic.entity.Clinic) {
          primaryTableReference : Clinic as c1_0
          TableGroupJoins {
            left  join LazyTableGroup (h1 : taha.clinic.entity.Clinic.hospital) {
              primaryTableReference : Hospital as h1_0
            }
          }
        }
      }
    }

2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6b70d1fb] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList] for NavigablePath [taha.clinic.entity.Clinic.clinicList] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Clinic.clinicList.{element})] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d59e968] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.person] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@55361f03] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.userAccount] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@581c9bb7] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.userAccount.person] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7e3d2ebd] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student.studentCourseRatings.{element})] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings.{element}] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b43f314] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings.{element}.course] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings.{element}.course] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [CollectionTableGroup(taha.clinic.entity.Prescription.drugs)] with identifierForTableGroup [taha.clinic.entity.Prescription.drugs] for NavigablePath [taha.clinic.entity.Prescription.drugs] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aaecabd] with identifierForTableGroup [taha.clinic.entity.Prescription.drugs.{element}] for NavigablePath [taha.clinic.entity.Prescription.drugs.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_1
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@23bd0c81] with identifierForTableGroup [taha.clinic.entity.Hospital.clinicList] for NavigablePath [taha.clinic.entity.Hospital.clinicList] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Hospital.clinicList.{element})] with identifierForTableGroup [taha.clinic.entity.Hospital.clinicList.{element}] for NavigablePath [taha.clinic.entity.Hospital.clinicList.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@1332dec4] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course.studentCourseRatings.{element})] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings.{element}] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@544e3679] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings.{element}.student] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings.{element}.student] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : a1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6889f56f] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord.appointments.{element})] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@231b35fb] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26da1ba2] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3820cfe] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2407a36c] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ec9eefa] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28b8f98a] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b4ef59f] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22cb3d59] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33e4b9c4] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5cff729b] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10d18696] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b8b5020] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d37ee0c] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5a7b309b] with identifierForTableGroup [taha.readFile.entity.Course.students] for NavigablePath [taha.readFile.entity.Course.students] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course.students.{element})] with identifierForTableGroup [taha.readFile.entity.Course.students.{element}] for NavigablePath [taha.readFile.entity.Course.students.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4602f874] with identifierForTableGroup [taha.readFile.entity.Course.students.{element}.student] for NavigablePath [taha.readFile.entity.Course.students.{element}.student] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@7739aac4] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord.prescriptions.{element})] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@353c6da1] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36c07c75] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6750e381] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic.hospital] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d850a25] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@b022551] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e14d390] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5eb87338] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b999ee8] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31ab1e67] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@29bbc391] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3487442d] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@530ee28b] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3a3f96ab] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount.person] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4def7d36] with identifierForTableGroup [taha.readFile.entity.Student.courses] for NavigablePath [taha.readFile.entity.Student.courses] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student.courses.{element})] with identifierForTableGroup [taha.readFile.entity.Student.courses.{element}] for NavigablePath [taha.readFile.entity.Student.courses.{element}] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@43c7fe8a] with identifierForTableGroup [taha.readFile.entity.Student.courses.{element}.course] for NavigablePath [taha.readFile.entity.Student.courses.{element}.course] 
2022-11-14 20:29:18 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c2_0
2022-11-14 20:29:18 | DEBUG | o.h.q.n.NamedObjectRepository | Checking 0 named HQL queries
2022-11-14 20:29:18 | DEBUG | o.h.q.n.NamedObjectRepository | Checking 0 named SQL queries
2022-11-14 20:29:18 | INFO  | o.h.o.c.access | HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e958f08] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Appointment
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Clinic
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    create table Course (
       id bigserial not null,
        createDateTime timestamp(6),
        updateDateTime timestamp(6),
        name varchar(255),
        primary key (id)
    )
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Doctor
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Drug
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Hospital
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : MedicalRecord
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Patient
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Person
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists Prescription 
       add column doctor_id bigint
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Prescription_drugs
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : Secretary
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    create table Student (
       id bigserial not null,
        createDateTime timestamp(6),
        updateDateTime timestamp(6),
        firstname varchar(255),
        lastname varchar(255),
        primary key (id)
    )
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    create table StudentCourse (
       id bigserial not null,
        createDateTime timestamp(6),
        updateDateTime timestamp(6),
        course_id bigint,
        student_id bigint,
        primary key (id)
    )
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    create table StudentCourseRating (
       id bigserial not null,
        createDateTime timestamp(6),
        updateDateTime timestamp(6),
        description varchar(255),
        rate float(53),
        course_id bigint,
        student_id bigint,
        primary key (id)
    )
2022-11-14 20:29:19 | DEBUG | o.h.m.Table | No alter strings for table : UserAccount
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists Prescription 
       add constraint FKoxdvk64nbi6qwhm3u44nhdh82 
       foreign key (doctor_id) 
       references Doctor
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists StudentCourse 
       add constraint FKg6ob5cwig53jmji8fqcg06h36 
       foreign key (course_id) 
       references Course
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists StudentCourse 
       add constraint FKsqp4q0y9siakabd4hr60cgqy6 
       foreign key (student_id) 
       references Student
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists StudentCourseRating 
       add constraint FK65fautfqmnje7i9gq70m5n357 
       foreign key (course_id) 
       references Course
2022-11-14 20:29:19 | DEBUG | o.h.SQL | 
    
    alter table if exists StudentCourseRating 
       add constraint FKo48fxwlo6k1uvtgk7skhchy39 
       foreign key (student_id) 
       references Student
2022-11-14 20:29:19 | DEBUG | o.h.e.t.j.p.i.JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
2022-11-14 20:29:19 | DEBUG | o.h.e.t.j.p.i.JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-11-14 20:29:19 | DEBUG | o.h.e.t.j.p.i.StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-14 20:29:19 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator | HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-14 20:29:19 | DEBUG | o.h.s.i.SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-11-14 20:29:19 | DEBUG | o.h.i.SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7cfb8e98
2022-11-14 20:29:19 | DEBUG | o.h.i.SessionFactoryRegistry | Registering SessionFactory: 8f08381f-d9b4-40a5-8b98-998dc90730e8 (<unnamed>)
2022-11-14 20:29:19 | DEBUG | o.h.i.SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
2022-11-14 20:29:19 | DEBUG | o.h.s.i.StatisticsInitiator | Statistics initialized [enabled=false]
2022-11-14 20:29:19 | DEBUG | t.c.m.Main | java.io.FileReader@7f4e5a39aaaaaaaaaaaaa
2022-11-14 20:29:19 | DEBUG | t.c.m.Main | java.io.BufferedReader@33de7f3daaaaaaaaaaaaa
2022-11-14 20:30:32 | DEBUG | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:30:32 | DEBUG | o.j.logging | Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-11-14 20:30:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Located and parsed 1 persistence units; checking each
2022-11-14 20:30:32 | DEBUG | o.h.j.HibernatePersistenceProvider | Checking persistence-unit [name=clinic, explicit-provider=null] against incoming persistence unit name [clinic]
2022-11-14 20:30:32 | DEBUG | o.h.j.b.s.ProviderChecker | No PersistenceProvider explicitly requested, assuming Hibernate
2022-11-14 20:30:32 | DEBUG | o.h.j.i.u.LogHelper | PersistenceUnitInfo [
	name: clinic
	persistence provider classname: null
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Havij1234@
		hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
		hibernate.show_sql: true
		jakarta.persistence.jdbc.url: jdbc:postgresql://localhost:5432/clinic
		jakarta.persistence.jdbc.driver: org.postgresql.Driver
		hibernate.hbm2ddl.auto: update
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: postgres]
2022-11-14 20:30:32 | DEBUG | o.h.i.i.IntegratorServiceImpl | Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-11-14 20:30:32 | DEBUG | o.h.i.i.IntegratorServiceImpl | Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-11-14 20:30:32 | INFO  | o.h.Version | HHH000412: Hibernate ORM core version 6.1.4.Final
2022-11-14 20:30:32 | DEBUG | o.h.c.Environment | HHH000206: hibernate.properties not found
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Resolving IdentifierGenerator instances will not use CDI as it was not configured
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.o.i.factory | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-11-14 20:30:32 | DEBUG | o.h.c.i.RegionFactoryInitiator | Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-11-14 20:30:32 | DEBUG | o.h.c.i.RegionFactoryInitiator | Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-11-14 20:30:32 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(FloatTypeDescriptor) replaced previous registration(DoubleTypeDescriptor)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@47289387
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@12cd9150
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@12cd9150
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration true_false -> org.hibernate.type.BasicTypeReference@114a85c2
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@114a85c2
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@f415a95
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@f415a95
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@cf65451
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration binary -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [B -> org.hibernate.type.BasicTypeReference@724f138e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@37eeec90
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration image -> org.hibernate.type.BasicTypeReference@32fe9d0a
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration blob -> org.hibernate.type.BasicTypeReference@c9413d8
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@c9413d8
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@64da2a7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@46074492
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@d78795
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration integer -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration int -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@2c715e84
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@47428937
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@3b9d6699
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@7caa550
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@21694e53
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@21694e53
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@72b16078
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@72b16078
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration character -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration char -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@22c86919
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@70fab835
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration string -> org.hibernate.type.BasicTypeReference@1b0a7baf
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@1b0a7baf
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62417a16
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration characters -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration char[] -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [C -> org.hibernate.type.BasicTypeReference@32057e6
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@26be6ca7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration text -> org.hibernate.type.BasicTypeReference@6ea1bcdc
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ntext -> org.hibernate.type.BasicTypeReference@759fad4
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration clob -> org.hibernate.type.BasicTypeReference@64712be
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@64712be
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration nclob -> org.hibernate.type.BasicTypeReference@53499d85
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@53499d85
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@30ed9c6c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@782a4fff
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@46c670a6
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@59fc684e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5ae81e1
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@2fd1731c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5ae76500
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5ae76500
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@6063d80a
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@6063d80a
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@1133ec6e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@1133ec6e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@355e34c7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@355e34c7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@54709809
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@54709809
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2da905
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@24f360b2
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@60cf80e7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@60cf80e7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@302fec27
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@302fec27
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@770d0ea6
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@48c40605
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration date -> org.hibernate.type.BasicTypeReference@54107f42
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@54107f42
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration time -> org.hibernate.type.BasicTypeReference@1b11ef33
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@1b11ef33
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@476aac9
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6cea706c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@3bd7f8dc
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@2f2bf0e2
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration instant -> org.hibernate.type.BasicTypeReference@1eba372c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1eba372c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@21ec5d87
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@25f9407e
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@552518c3
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration class -> org.hibernate.type.BasicTypeReference@1a69561c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@1a69561c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration Currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@59aa20b3
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration locale -> org.hibernate.type.BasicTypeReference@363f6148
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@363f6148
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration serializable -> org.hibernate.type.BasicTypeReference@4b21844c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@4b21844c
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration timezone -> org.hibernate.type.BasicTypeReference@1b28f282
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@1b28f282
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@138fe6ec
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@138fe6ec
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration url -> org.hibernate.type.BasicTypeReference@5e77f0f4
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@5e77f0f4
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration row_version -> org.hibernate.type.BasicTypeReference@19b30c92
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@660e9100
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@660e9100
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration object -> org.hibernate.type.JavaObjectType@3dd69f5a
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@3dd69f5a
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration null -> org.hibernate.type.NullType@9573b3b
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@67427b69
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@78461bc4
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@544630b7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@64f857e7
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1095f122
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@58c540cf
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3d6300e8
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1b822fcc
2022-11-14 20:30:32 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@46cc127b] into BootstrapContext; was [null]
2022-11-14 20:30:32 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60094a13] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5aceec94]
2022-11-14 20:30:32 | DEBUG | o.h.b.i.BootstrapContextImpl | Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-11-14 20:30:32 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:30:32 | INFO  | o.h.o.c.pooling | HHH10001005: Loaded JDBC driver class: org.postgresql.Driver
2022-11-14 20:30:32 | INFO  | o.h.o.c.pooling | HHH10001012: Connecting with JDBC URL [jdbc:postgresql://localhost:5432/clinic]
2022-11-14 20:30:32 | INFO  | o.h.o.c.pooling | HHH10001001: Connection properties: {password=Havij1234@, user=postgres}
2022-11-14 20:30:32 | INFO  | o.h.o.c.pooling | HHH10001003: Autocommit mode: false
2022-11-14 20:30:32 | DEBUG | o.h.o.c.pooling | Initializing Connection pool with 1 Connections
2022-11-14 20:30:32 | INFO  | o.h.o.c.pooling | HHH10001115: Connection pool size: 20 (min=1)
2022-11-14 20:30:32 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | Database ->
       name : PostgreSQL
    version : 14.4
      major : 14
      minor : 4
2022-11-14 20:30:32 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.5.0
      major : 42
      minor : 5
2022-11-14 20:30:32 | DEBUG | o.h.e.j.e.i.JdbcEnvironmentInitiator | JDBC version : 4.2
2022-11-14 20:30:32 | INFO  | SQL dialect | HHH000400: Using dialect: org.hibernate.dialect.PostgreSQLDialect
2022-11-14 20:30:32 | DEBUG | o.h.e.j.e.s.IdentifierHelperBuilder | JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2022-11-14 20:30:32 | DEBUG | o.h.t.d.s.s.DdlTypeRegistry | addDescriptor(6, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@528f8f8b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@ea9e141)
2022-11-14 20:30:32 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(2004, BlobTypeDescriptor(BLOB_BINDING)) replaced previous registration(BlobTypeDescriptor(DEFAULT))
2022-11-14 20:30:32 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(2005, ClobTypeDescriptor(CLOB_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2022-11-14 20:30:32 | DEBUG | o.h.t.d.j.s.JdbcTypeRegistry | addDescriptor(3003, TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration JAVA_OBJECT -> org.hibernate.type.JavaObjectType@35636217
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@35636217
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Type registration key [java.lang.Object] overrode previous entry : `org.hibernate.type.JavaObjectType@3dd69f5a`
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.BasicTypeRegistry | Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,93)
2022-11-14 20:30:32 | DEBUG | o.h.t.s.TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@610df783] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f3fcd59]
2022-11-14 20:30:32 | DEBUG | o.h.b.m.r.Namespace | Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-11-14 20:30:32 | DEBUG | o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl | Skipping explicit MappedSuperclass taha.clinic.base.entity.BaseEntity, the class will be discovered analyzing the implementing class
2022-11-14 20:30:32 | DEBUG | o.h.b.m.s.i.a.AnnotationMetadataSourceProcessorImpl | Skipping explicit MappedSuperclass taha.readFile.base.entity.BaseEntity, the class will be discovered analyzing the implementing class
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Hospital on table Hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Hospital] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=clinicList_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='clinicList_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='hospital'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Hospital), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Hospital:name]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Hospital.name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Doctor on table Doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Doctor] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=clinic, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=isAvailable, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property isAvailable with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:isAvailable]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for isAvailable
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.isAvailable
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property isAvailable
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=person, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property person
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=speciality, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property speciality with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Doctor:speciality]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for speciality
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Doctor.speciality
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property speciality
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Doctor), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Student
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.Student on table Student
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Student] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=courses_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='courses_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Student.courses
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property courses
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=firstname, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property firstname with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:firstname]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for firstname
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.firstname
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property firstname
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property lastname with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Student:lastname]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for lastname
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Student.lastname
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property lastname
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Student), mappingColumn=studentCourseRatings_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='studentCourseRatings_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='student'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Patient
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Patient on table Patient
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Patient] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Patient:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Patient.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='user_account_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Patient), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Course
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.Course on table Course
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Course] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.Course:name]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Course.name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=studentCourseRatings_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='studentCourseRatings_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Course), mappingColumn=students_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='students_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='course'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.readFile.entity.Course.students
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property students
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.StudentCourseRating on table StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourseRating] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=course, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property course
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=description, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property description with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:description]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for description
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.description
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property description
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=rate, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property rate with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourseRating:rate]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for rate
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourseRating.rate
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property rate
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourseRating), mappingColumn=student, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property student
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.readFile.entity.StudentCourse on table StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourse] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.readFile.entity.StudentCourse:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: StudentCourse.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=course, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property course
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(StudentCourse), mappingColumn=student, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property student
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Secretary
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Secretary
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Secretary on table Secretary
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Secretary] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Secretary
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Secretary:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Secretary.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='user_account_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Secretary), mappingColumn=userAccount, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property userAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Appointment on table Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Appointment] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property date with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:date]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for date
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.date
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property date
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='doctor_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=doctor, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=fromTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property fromTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:fromTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for fromTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.fromTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property fromTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='medical_record_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=status, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property status with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:status]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for status
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.status
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property status
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Appointment), mappingColumn=thruTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property thruTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Appointment:thruTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for thruTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Appointment.thruTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property thruTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.MedicalRecord on table MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.MedicalRecord] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.MedicalRecord:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: MedicalRecord.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=appointments_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='appointments_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property appointments
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='patient_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(MedicalRecord), mappingColumn=prescriptions_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='prescriptions_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='medicalRecord'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property prescriptions
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.UserAccount on table UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.UserAccount] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property accountType with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:accountType]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for accountType
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.accountType
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property accountType
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=password, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property password with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:password]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for password
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.password
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property password
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=person, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property person
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=username, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property username with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.UserAccount:username]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for username
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: UserAccount.username
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property username
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Prescription on table Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Prescription] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Prescription:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Prescription.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=doctor, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=drugs_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=drugs_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='drugs_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='prescription_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='drugs_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Prescription.drugs
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property drugs
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='medical_record_id', referencedColumn='', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=medicalRecord, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property medicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Prescription), mappingColumn=patient, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property patient
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Drug
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Drug on table Drug
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Drug] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=dose, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property dose with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:dose]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for dose
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.dose
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property dose
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Drug), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Drug:name]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Drug.name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Person
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Person on table Person
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Person] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property firstName with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:firstName]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for firstName
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.firstName
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property firstName
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property lastName with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:lastName]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for lastName
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.lastName
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property lastName
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Person), mappingColumn=nationalCode, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property nationalCode with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Person:nationalCode]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for nationalCode
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Person.nationalCode
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property nationalCode
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotationBinder | Binding entity from annotated class: taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Import with entity name Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.a.EntityBinder | Bind entity taha.clinic.entity.Clinic on table Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Clinic] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property id with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:id]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for id
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property id
2022-11-14 20:30:32 | DEBUG | o.h.c.BinderHelper | #makeIdGenerator(org.hibernate.mapping.BasicValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=createDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property createDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:createDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=updateDateTime, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property updateDateTime with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:updateDateTime]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList_ORDER, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=element, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=clinicList_KEY, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='clinicList_KEY', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='clinic'}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Collection role: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=hospital, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.AnnotatedColumn | Binding column: Column{table=org.hibernate.mapping.Table(Clinic), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | MetadataSourceProcessor property name with lazy=false
2022-11-14 20:30:32 | DEBUG | o.h.c.AbstractPropertyHolder | Attempting to locate auto-apply AttributeConverter for property [taha.clinic.entity.Clinic:name]
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | building BasicValue for name
2022-11-14 20:30:32 | DEBUG | o.h.m.BasicValue | Skipping column re-registration: Clinic.name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.PropertyBinder | Building property name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for isAvailable
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for speciality
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for firstname
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for lastname
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for description
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for rate
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for date
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for fromTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for status
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for thruTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for accountType
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for password
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for username
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for dose
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for firstName
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for lastName
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for nationalCode
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for id
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for createDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for updateDateTime
2022-11-14 20:30:32 | DEBUG | o.h.c.a.BasicValueBinder | Starting `BasicValueBinder#fillSimpleValue` for name
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [hospital]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [doctor]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [student]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [patient]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [course]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [studentcourserating]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [studentcourse]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [secretary]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [appointment]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [medicalrecord]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [useraccount]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [prescription]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [drug]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [person]
2022-11-14 20:30:32 | DEBUG | o.h.m.PrimaryKey | Forcing column [id] to be non-null as it is part of the primary key for table [clinic]
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Prescription.drugs
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a ManyToMany: taha.clinic.entity.Prescription.drugs
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: prescription_id, element: drugs_id
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.Hospital.clinicList through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.Hospital.clinicList -> Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Clinic.hospital
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: hospital_id, one-to-many: taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Student.courses
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Student.courses through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Student.courses -> StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourse.student
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: student_id, one-to-many: taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Student.studentCourseRatings through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Student.studentCourseRatings -> StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourseRating.student
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: student_id, one-to-many: taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Course.studentCourseRatings through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Course.studentCourseRatings -> StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourseRating.course
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: course_id, one-to-many: taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.readFile.entity.Course.students
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.readFile.entity.Course.students through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.readFile.entity.Course.students -> StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.readFile.entity.StudentCourse.course
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: course_id, one-to-many: taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.MedicalRecord.appointments through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.MedicalRecord.appointments -> Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Appointment.medicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: medical_record_id, one-to-many: taha.clinic.entity.Appointment
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.MedicalRecord.prescriptions through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.MedicalRecord.prescriptions -> Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Prescription.medicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: medical_record_id, one-to-many: taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Second pass for collection: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Binding a OneToMany: taha.clinic.entity.Clinic.clinicList through a foreign key
2022-11-14 20:30:32 | DEBUG | o.h.c.a.CollectionBinder | Mapping collection: taha.clinic.entity.Clinic.clinicList -> Doctor
2022-11-14 20:30:32 | DEBUG | o.h.c.a.TableBinder | Retrieving property taha.clinic.entity.Doctor.clinic
2022-11-14 20:30:32 | DEBUG | o.h.c.CollectionSecondPass | Mapped collection key: clinic_id, one-to-many: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.b.i.InFlightMetadataCollectorImpl | Resolving reference to class: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.i.SessionFactoryImpl | Building session factory
2022-11-14 20:30:32 | DEBUG | o.h.s.i.SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-11-14 20:30:32 | DEBUG | o.h.i.SessionFactoryImpl | Session factory constructed with filter configurations : {}
2022-11-14 20:30:32 | DEBUG | o.h.i.SessionFactoryImpl | Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=19, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect, java.class.path=/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21/target/classes:/Users/tahamohammadi/.m2/repository/org/hibernate/orm/hibernate-core/6.1.4.Final/hibernate-core-6.1.4.Final.jar:/Users/tahamohammadi/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.0.0/jakarta.persistence-api-3.0.0.jar:/Users/tahamohammadi/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.0/jakarta.transaction-api-2.0.0.jar:/Users/tahamohammadi/.m2/repository/org/jboss/logging/jboss-logging/3.4.3.Final/jboss-logging-3.4.3.Final.jar:/Users/tahamohammadi/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.2.Final/hibernate-commons-annotations-6.0.2.Final.jar:/Users/tahamohammadi/.m2/repository/org/jboss/jandex/2.4.2.Final/jandex-2.4.2.Final.jar:/Users/tahamohammadi/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/tahamohammadi/.m2/repository/net/bytebuddy/byte-buddy/1.12.9/byte-buddy-1.12.9.jar:/Users/tahamohammadi/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/3.0.1/jakarta.xml.bind-api-3.0.1.jar:/Users/tahamohammadi/.m2/repository/com/sun/activation/jakarta.activation/2.0.1/jakarta.activation-2.0.1.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/jaxb-runtime/3.0.2/jaxb-runtime-3.0.2.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/jaxb-core/3.0.2/jaxb-core-3.0.2.jar:/Users/tahamohammadi/.m2/repository/org/glassfish/jaxb/txw2/3.0.2/txw2-3.0.2.jar:/Users/tahamohammadi/.m2/repository/com/sun/istack/istack-commons-runtime/4.0.1/istack-commons-runtime-4.0.1.jar:/Users/tahamohammadi/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.0/jakarta.inject-api-2.0.0.jar:/Users/tahamohammadi/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar:/Users/tahamohammadi/.m2/repository/org/postgresql/postgresql/42.5.0/postgresql-42.5.0.jar:/Users/tahamohammadi/.m2/repository/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar:/Users/tahamohammadi/.m2/repository/org/projectlombok/lombok/1.18.24/lombok-1.18.24.jar:/Users/tahamohammadi/.m2/repository/org/jetbrains/annotations/23.0.0/annotations-23.0.0.jar:/Users/tahamohammadi/.m2/repository/org/apache/logging/log4j/log4j-api/2.19.0/log4j-api-2.19.0.jar:/Users/tahamohammadi/.m2/repository/org/apache/logging/log4j/log4j-core/2.19.0/log4j-core-2.19.0.jar:/Users/tahamohammadi/.m2/repository/com/github/javafaker/javafaker/1.0.2/javafaker-1.0.2.jar:/Users/tahamohammadi/.m2/repository/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/Users/tahamohammadi/.m2/repository/org/yaml/snakeyaml/1.23/snakeyaml-1.23-android.jar:/Users/tahamohammadi/.m2/repository/com/github/mifmif/generex/1.0.2/generex-1.0.2.jar:/Users/tahamohammadi/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar, java.vm.vendor=Homebrew, sun.arch.data.model=64, java.vendor.url=https://github.com/Homebrew/homebrew-core/issues, user.timezone=Asia/Tehran, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:postgresql://localhost:5432/clinic, java.vm.specification.version=19, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=US, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/opt/homebrew/Cellar/openjdk/19/libexec/openjdk.jdk/Contents/Home/lib, sun.java.command=taha.readFile.Main, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=org.postgresql.Driver, sun.cpu.endian=little, user.home=/Users/tahamohammadi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2022-09-20, java.home=/opt/homebrew/Cellar/openjdk/19/libexec/openjdk.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=clinic, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=org.postgresql.Driver, apple.awt.application.name=Main, hibernate.hbm2ddl.auto=update, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=19, user.name=tahamohammadi, stdout.encoding=UTF-8, path.separator=:, hibernate.connection.username=****, os.version=12.6, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://localhost:5432/clinic, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Homebrew, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://github.com/Homebrew/homebrew-core/issues, java.io.tmpdir=/var/folders/pg/8k22tvbx1v117vj8gd653v580000gn/T/, java.version=19, user.dir=/Users/tahamohammadi/Desktop/MaktabSharif/HomeWork/HW21, os.arch=aarch64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:postgresql://localhost:5432/clinic, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@eac3a26, native.encoding=UTF-8, java.library.path=/Users/tahamohammadi/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., stderr.encoding=UTF-8, java.vendor=Homebrew, java.vm.info=mixed mode, sharing, java.vm.version=19, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=63.0}
2022-11-14 20:30:32 | DEBUG | o.h.i.SessionFactoryImpl | Instantiated session factory
2022-11-14 20:30:32 | DEBUG | o.h.o.q.p.cache | Starting QueryPlanCache(2048)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3b48e183] under count; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@670b3ca] under every; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@24a86066] under any; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : length -> character_length
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3d64c581] under position; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c83ae01] under overlay; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6e6d4780] under trim; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@2cde651b] under cast; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26fb4d06] under collate; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2d38edfd] under extract; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6614bd4b] under ifnull; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@78e17a99] under pad; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6a2c717f] under str; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@fe7b6b0] under format; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6f76c2cc] under timestampadd; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1df1ced0] under timestampdiff; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : dateadd -> timestampadd
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : datediff -> timestampdiff
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39bbd9e0] under current_date; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@27fe9713] under current_time; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11c3ff67] under current_timestamp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current date -> current_date
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current time -> current_time
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current timestamp -> current_timestamp
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4397a639] under local_date; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@24841372] under local_time; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77114efe] under local_datetime; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79a7bfbc] under offset_datetime; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local date -> local_date
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local time -> local_time
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : local datetime -> local_datetime
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : offset datetime -> offset_datetime
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77f68df] under instant; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : current_instant -> instant
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46a488c2] under sql; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6242ae3b] under round; prior registration was NamedSqmFunctionTemplate(round)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(trunc)] under trunc; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cbrt)] under cbrt; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(initcap)] under initcap; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substring; prior registration was NamedSqmFunctionTemplate(substring)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_number)] under to_number; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_char)] under to_char; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_date)] under to_date; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(to_timestamp)] under to_timestamp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ConcatPipeFunction@43fda8d9] under concat; prior registration was NamedSqmFunctionTemplate(concat)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@24841372
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@77114efe
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@49d831c2] under date_trunc; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@ef60710] under character_length; prior registration was NamedSqmFunctionTemplate(character_length)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : length -> character_length
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@600f5704] under bit_length; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.LengthFunction@2503ec73] under octet_length; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(chr)] under chr; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : char -> chr
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@606f81b5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3d64c581
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1fc42f] under bitand; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@44b21f9f] under bitor; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ee8130e] under bitxor; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6296474f] under bitnot; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : every -> bool_and
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registering alternate key : any -> bool_or
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4288d98e] under median; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_pop)] under covar_pop; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(covar_samp)] under covar_samp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(corr)] under corr; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgx)] under regr_avgx; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_avgy)] under regr_avgy; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_count)] under regr_count; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_intercept)] under regr_intercept; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_r2)] under regr_r2; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_slope)] under regr_slope; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxx)] under regr_sxx; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_sxy)] under regr_sxy; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(regr_syy)] under regr_syy; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@285c6918] under insert; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@326d27ac] under overlay; prior registration was org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5c83ae01
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@4d499d65] under locate; prior registration was NamedSqmFunctionTemplate(locate)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggStringAggEmulation@4860827a] under listagg; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_date)] under make_date; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_time)] under make_time; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamp)] under make_timestamp; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(make_timestamptz)] under make_timestamptz; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4fa822ad] under mode; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@597f0937] under percentile_cont; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7ad1caa2] under percentile_disc; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@303f1234] under rank; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@24d61e4] under dense_rank; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2149594a] under percent_rank; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1f1e58ca] under cume_dist; prior registration was null
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@380e1909] under min; prior registration was NamedSqmFunctionTemplate(min)
2022-11-14 20:30:32 | DEBUG | o.h.q.s.f.SqmFunctionRegistry | Registered SqmFunctionTemplate [org.hibernate.dialect.function.PostgreSQLMinMaxFunction@2d5ef498] under max; prior registration was NamedSqmFunctionTemplate(max)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | abs(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double acos(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean any(BOOLEAN arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer ascii(STRING arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double asin(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double atan(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double atan2(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double avg(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bit_and(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer bit_length(STRING_OR_CLOB arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bit_or(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bitand(arg0, arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bitnot(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bitor(arg0, arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | bitxor(arg0, arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean bool_and(BOOLEAN predicate)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean bool_or(BOOLEAN predicate)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | cast(arg as Type)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double cbrt(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | ceiling(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer character_length(STRING_OR_CLOB arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Character chr(INTEGER arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | coalesce(arg0[, arg1[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String collate(STRING string as COLLATION collation)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | (STRING string0[, STRING string1[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double corr(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double cos(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double cot(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Long count([distinct ]{arg|*})
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double covar_pop(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double covar_samp(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double cume_dist([arg0[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Date current_date
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Time current_time
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp current_timestamp
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp date_trunc(TEMPORAL_UNIT field, TEMPORAL datetime)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double degrees(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Long dense_rank([arg0[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean every(BOOLEAN arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double exp(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | extract(TEMPORAL_UNIT field from TEMPORAL arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | first_valueANY value
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | floor(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String format(TEMPORAL datetime as STRING pattern)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | ifnull(arg0, arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String initcap(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Instant instant
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | lagANY value[, INTEGER offset[, ANY default]]
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | last_valueANY value
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | leadANY value[, INTEGER offset[, ANY default]]
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String left(STRING string, INTEGER length)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String listagg(STRING arg0, STRING arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double ln(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalDate local_date
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalDateTime local_datetime
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalTime local_time
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Time localtime
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp localtimestamp
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer locate(STRING pattern, STRING string[, INTEGER start])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double log(NUMERIC arg0[, NUMERIC arg1])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double log10(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String lower(STRING string)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String lpad(STRING string, INTEGER length[, STRING padding])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String ltrim(STRING string[, STRING characters])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Date make_date(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Time make_time(INTEGER arg0, INTEGER arg1, INTEGER arg2)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp make_timestamp(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp make_timestamptz(INTEGER arg0, INTEGER arg1, INTEGER arg2, INTEGER arg3, INTEGER arg4, INTEGER arg5[, INTEGER arg6])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | max(COMPARABLE arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String md5(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double median(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | min(COMPARABLE arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer mod(INTEGER arg0, INTEGER arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | mode()
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | nth_valueANY value, INTEGER nth
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | nullif(arg0, arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer octet_length(STRING_OR_CLOB arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | OffsetDateTime offset_datetime
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String overlay(string placing replacement from start[ for length])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double percent_rank([arg0[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | percentile_cont(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | percentile_disc(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer position(STRING pattern in STRING string)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double power(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double radians(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Long rank([arg0[, ...]])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_avgx(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_avgy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_count(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_intercept(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_r2(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_slope(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_sxx(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_sxy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double regr_syy(NUMERIC arg0, NUMERIC arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String repeat(STRING string, INTEGER times)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String replace(STRING string, STRING pattern, STRING replacement)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String right(STRING string, INTEGER length)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | round(NUMERIC arg0, INTEGER arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Long row_number()
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String rpad(STRING string, INTEGER length[, STRING padding])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String rtrim(STRING string[, STRING characters])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer sign(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double sin(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String soundex(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Object sql
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double sqrt(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev_pop(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double stddev_samp(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String str(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String substr(STRING string, INTEGER start[, INTEGER length])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | sum(arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double tan(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | basicType@3(java.lang.Long,-5)|basicType@7(java.lang.Double,6) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String to_char(ANY arg0[, STRING arg1, STRING arg2])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Date to_date(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double to_number(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp to_timestamp(STRING arg0[, STRING arg1, STRING arg2])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String translate(STRING arg0, STRING arg1, STRING arg2)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double trunc(NUMERIC number[, INTEGER places])
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | String upper(STRING string)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double var_pop(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double var_samp(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Double variance(NUMERIC arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean any(BOOLEAN predicate)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Character char(INTEGER arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Date current date
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Time current time
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Timestamp current timestamp
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Instant current_instant
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | basicType@3(java.lang.Long,-5)|basicType@7(java.lang.Double,6) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Boolean every(BOOLEAN predicate)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | Integer length(STRING_OR_CLOB arg)
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalDate local date
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalDateTime local datetime
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | LocalTime local time
2022-11-14 20:30:32 | DEBUG | o.h.HQL_FUNCTIONS | OffsetDateTime offset datetime
2022-11-14 20:30:32 | DEBUG | o.h.t.s.TypeConfiguration$Scope | Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@610df783] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@dd71b20]
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Hospital] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Doctor] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#clinic` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Doctor#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Student] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Patient] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Patient#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.Course] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourseRating] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourseRating#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.readFile.entity.StudentCourse] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#course` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.readFile.entity.StudentCourse#student` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Secretary] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Secretary
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Secretary#userAccount` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Appointment] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Appointment
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Appointment#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.MedicalRecord] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.MedicalRecord#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.UserAccount] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.UserAccount#person` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Prescription] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#doctor` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#medicalRecord` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Prescription#patient` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Drug] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Person] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | Not known whether passed class name [taha.clinic.entity.Clinic] is safe
2022-11-14 20:30:32 | DEBUG | o.h.b.i.ClassLoaderAccessImpl | No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.o.interceptor | To-one property `taha.clinic.entity.Clinic#hospital` was mapped with LAZY + NO_PROXY but the class was not enhanced
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Clinic.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Doctor set clinic_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Doctor set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Doctor set clinic_id=null where clinic_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Doctor set clinic_id=null where clinic_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Student.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourseRating set student_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourseRating set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourseRating set student_id=null where student_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourseRating set student_id=null where student_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Prescription.drugs
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: insert into Prescription_drugs (prescription_id, drugs_id) values (?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Prescription_drugs set drugs_id=? where prescription_id=? and drugs_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: delete from Prescription_drugs where prescription_id=? and drugs_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: delete from Prescription_drugs where prescription_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.Hospital.clinicList
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Clinic set hospital_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Clinic set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Clinic set hospital_id=null where hospital_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Clinic set hospital_id=null where hospital_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Course.studentCourseRatings
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourseRating set course_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourseRating set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourseRating set course_id=null where course_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourseRating set course_id=null where course_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.MedicalRecord.appointments
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Appointment set medical_record_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Appointment set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Appointment set medical_record_id=null where medical_record_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Appointment set medical_record_id=null where medical_record_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Course.students
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourse set course_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourse set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourse set course_id=null where course_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourse set course_id=null where course_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.clinic.entity.MedicalRecord.prescriptions
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update Prescription set medical_record_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update Prescription set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update Prescription set medical_record_id=null where medical_record_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update Prescription set medical_record_id=null where medical_record_id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister | Static SQL for collection: taha.readFile.entity.Student.courses
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row insert: update StudentCourse set student_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row update: update StudentCourse set  where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  Row delete: update StudentCourse set student_id=null where student_id=? and id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.c.AbstractCollectionPersister |  One-shot delete: update StudentCourse set student_id=null where student_id=?
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting post-init callbacks
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Hospital.clinicList#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.clinic.entity.Clinic.hospital])@177267393
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Hospital.clinicList)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Hospital.clinicList) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Hospital) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.clinic]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.person]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Doctor.userAccount]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Doctor) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.courses#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourse.student])@1171611746
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.courses)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.courses) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourseRating.student])@445554393
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.studentCourseRatings)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Student.studentCourseRatings) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.Student) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Patient.medicalRecord]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Patient.userAccount]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Patient) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourseRating.course])@682025329
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.studentCourseRatings)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.studentCourseRatings) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.students#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.readFile.entity.StudentCourse.course])@798695894
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.students)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.readFile.entity.Course.students) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.Course) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourseRating.course]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourseRating.student]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.StudentCourseRating) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourse.course]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.readFile.entity.StudentCourse.student]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.readFile.entity.StudentCourse) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Secretary.userAccount]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Secretary) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.doctor]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.medicalRecord]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Appointment.patient]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Appointment) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.appointments#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.appointments)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.appointments) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.MedicalRecord.patient]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.prescriptions#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Mapping-model creation encountered (possibly) transient error : java.lang.IllegalStateException: Not yet ready: ToOneAttributeMapping(NavigableRole[taha.clinic.entity.Prescription.medicalRecord])@2026005178
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.prescriptions)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.MedicalRecord.prescriptions) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.MedicalRecord) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.UserAccount.person]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.UserAccount) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.doctor]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Prescription.drugs#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Prescription.drugs)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Prescription.drugs) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.medicalRecord]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Prescription.patient]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Prescription) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Drug) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Person) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Clinic.clinicList#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Clinic.clinicList)#finishInitialization
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping(taha.clinic.entity.Clinic.clinicList) - key descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : To-one key - NavigableRole[taha.clinic.entity.Clinic.hospital]
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : Entity(taha.clinic.entity.Clinic) `staticFetchableList` generator
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.Hospital.clinicList#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.courses#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Student.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.studentCourseRatings#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.readFile.entity.Course.students#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.o.m.m.creation | Starting PostInitCallbackEntry : PluralAttributeMapping( NavigableRole[taha.clinic.entity.MedicalRecord.prescriptions#{element}]) - index descriptor
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Hospital
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Hospital where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Hospital (createDateTime, name, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Hospital set createDateTime=?, name=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Hospital where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Hospital (createDateTime, name, updateDateTime) values (?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Hospital)] with identifierForTableGroup [taha.clinic.entity.Hospital] for NavigablePath [taha.clinic.entity.Hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Hospital]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Hospital.clinicList]
 |  +-BasicFetch [taha.clinic.entity.Hospital.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Hospital.name]
 |  \-BasicFetch [taha.clinic.entity.Hospital.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (h1 : taha.clinic.entity.Hospital) {
          primaryTableReference : Hospital as h1_0
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Doctor
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Doctor where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Doctor (clinic_id, createDateTime, isAvailable, person_id, speciality, updateDateTime, userAccount_id, id) values (?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Doctor set clinic_id=?, createDateTime=?, isAvailable=?, person_id=?, speciality=?, updateDateTime=?, userAccount_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Doctor where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Doctor (clinic_id, createDateTime, isAvailable, person_id, speciality, updateDateTime, userAccount_id) values (?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Doctor)] with identifierForTableGroup [taha.clinic.entity.Doctor] for NavigablePath [taha.clinic.entity.Doctor] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1788cb61] with identifierForTableGroup [taha.clinic.entity.Doctor.clinic] for NavigablePath [taha.clinic.entity.Doctor.clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@27a9f025] with identifierForTableGroup [taha.clinic.entity.Doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Doctor.clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45037e16] with identifierForTableGroup [taha.clinic.entity.Doctor.person] for NavigablePath [taha.clinic.entity.Doctor.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2f2e4bde] with identifierForTableGroup [taha.clinic.entity.Doctor.userAccount] for NavigablePath [taha.clinic.entity.Doctor.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6222391a] with identifierForTableGroup [taha.clinic.entity.Doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Doctor.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Doctor]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.clinic]
 |  +-BasicFetch [taha.clinic.entity.Doctor.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Doctor.isAvailable]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.person]
 |  +-BasicFetch [taha.clinic.entity.Doctor.speciality]
 |  +-BasicFetch [taha.clinic.entity.Doctor.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Doctor.userAccount]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : taha.clinic.entity.Doctor) {
          primaryTableReference : Doctor as d1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.clinic.entity.Doctor.clinic) {
              primaryTableReference : Clinic as c1_0
              TableGroupJoins {
                left  join LazyTableGroup (h1 : taha.clinic.entity.Doctor.clinic.hospital) {
                  primaryTableReference : Hospital as h1_0
                }
              }
            }
            left  join LazyTableGroup (p1 : taha.clinic.entity.Doctor.person) {
              primaryTableReference : Person as p1_0
            }
            left  join LazyTableGroup (u1 : taha.clinic.entity.Doctor.userAccount) {
              primaryTableReference : UserAccount as u1_0
              TableGroupJoins {
                left  join LazyTableGroup (p2 : taha.clinic.entity.Doctor.userAccount.person) {
                  primaryTableReference : Person as p2_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.Student
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Student where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Student (createDateTime, firstname, lastname, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Student set createDateTime=?, firstname=?, lastname=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Student where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Student (createDateTime, firstname, lastname, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student)] with identifierForTableGroup [taha.readFile.entity.Student] for NavigablePath [taha.readFile.entity.Student] 
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.Student]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Student.courses]
 |  +-BasicFetch [taha.readFile.entity.Student.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.Student.firstname]
 |  +-BasicFetch [taha.readFile.entity.Student.lastname]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Student.studentCourseRatings]
 |  \-BasicFetch [taha.readFile.entity.Student.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.Student) {
          primaryTableReference : Student as s1_0
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Patient
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Patient where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Patient (createDateTime, medicalRecord_id, updateDateTime, user_account_id, id) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Patient set createDateTime=?, medicalRecord_id=?, updateDateTime=?, user_account_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Patient where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Patient (createDateTime, medicalRecord_id, updateDateTime, user_account_id) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Patient)] with identifierForTableGroup [taha.clinic.entity.Patient] for NavigablePath [taha.clinic.entity.Patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@14b4340c] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord] for NavigablePath [taha.clinic.entity.Patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@12abcd1e] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@42c12b3e] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2dbfa972] with identifierForTableGroup [taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@46f73ffa] with identifierForTableGroup [taha.clinic.entity.Patient.userAccount] for NavigablePath [taha.clinic.entity.Patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@41aebbb4] with identifierForTableGroup [taha.clinic.entity.Patient.userAccount.person] for NavigablePath [taha.clinic.entity.Patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Patient]
 |  +-BasicFetch [taha.clinic.entity.Patient.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Patient.medicalRecord]
 |  +-BasicFetch [taha.clinic.entity.Patient.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Patient.userAccount]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Patient) {
          primaryTableReference : Patient as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (m1 : taha.clinic.entity.Patient.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p2 : taha.clinic.entity.Patient.medicalRecord.patient) {
                  primaryTableReference : Patient as p2_0
                  TableGroupJoins {
                    left  join LazyTableGroup (u1 : taha.clinic.entity.Patient.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u1_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p3 : taha.clinic.entity.Patient.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p3_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (u2 : taha.clinic.entity.Patient.userAccount) {
              primaryTableReference : UserAccount as u2_0
              TableGroupJoins {
                left  join LazyTableGroup (p4 : taha.clinic.entity.Patient.userAccount.person) {
                  primaryTableReference : Person as p4_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.Course
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Course where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Course (createDateTime, name, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Course set createDateTime=?, name=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Course where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Course (createDateTime, name, updateDateTime) values (?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course)] with identifierForTableGroup [taha.readFile.entity.Course] for NavigablePath [taha.readFile.entity.Course] 
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.Course]
 |  +-BasicFetch [taha.readFile.entity.Course.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.Course.name]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Course.studentCourseRatings]
 |  +-DelayedCollectionFetch [taha.readFile.entity.Course.students]
 |  \-BasicFetch [taha.readFile.entity.Course.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : taha.readFile.entity.Course) {
          primaryTableReference : Course as c1_0
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.StudentCourseRating
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from StudentCourseRating where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into StudentCourseRating (createDateTime, description, rate, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update StudentCourseRating set createDateTime=?, description=?, rate=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from StudentCourseRating where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into StudentCourseRating (createDateTime, description, rate, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.StudentCourseRating)] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating] for NavigablePath [taha.readFile.entity.StudentCourseRating] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@252ec02e] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating.course] for NavigablePath [taha.readFile.entity.StudentCourseRating.course] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@11e9ac24] with identifierForTableGroup [taha.readFile.entity.StudentCourseRating.student] for NavigablePath [taha.readFile.entity.StudentCourseRating.student] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.StudentCourseRating]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourseRating.course]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.createDateTime]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.description]
 |  +-BasicFetch [taha.readFile.entity.StudentCourseRating.rate]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourseRating.student]
 |  \-BasicFetch [taha.readFile.entity.StudentCourseRating.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.StudentCourseRating) {
          primaryTableReference : StudentCourseRating as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.readFile.entity.StudentCourseRating.course) {
              primaryTableReference : Course as c1_0
            }
            left  join LazyTableGroup (s2 : taha.readFile.entity.StudentCourseRating.student) {
              primaryTableReference : Student as s2_0
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.readFile.entity.StudentCourse
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from StudentCourse where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into StudentCourse (createDateTime, updateDateTime, id) values (?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update StudentCourse set createDateTime=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from StudentCourse where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into StudentCourse (createDateTime, updateDateTime) values (?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.StudentCourse)] with identifierForTableGroup [taha.readFile.entity.StudentCourse] for NavigablePath [taha.readFile.entity.StudentCourse] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@675b18ff] with identifierForTableGroup [taha.readFile.entity.StudentCourse.course] for NavigablePath [taha.readFile.entity.StudentCourse.course] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@34279b8a] with identifierForTableGroup [taha.readFile.entity.StudentCourse.student] for NavigablePath [taha.readFile.entity.StudentCourse.student] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.readFile.entity.StudentCourse]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourse.course]
 |  +-BasicFetch [taha.readFile.entity.StudentCourse.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.readFile.entity.StudentCourse.student]
 |  \-BasicFetch [taha.readFile.entity.StudentCourse.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.readFile.entity.StudentCourse) {
          primaryTableReference : StudentCourse as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (c1 : taha.readFile.entity.StudentCourse.course) {
              primaryTableReference : Course as c1_0
            }
            left  join LazyTableGroup (s2 : taha.readFile.entity.StudentCourse.student) {
              primaryTableReference : Student as s2_0
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Secretary
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Secretary where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Secretary (createDateTime, updateDateTime, user_account_id, id) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Secretary set createDateTime=?, updateDateTime=?, user_account_id=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Secretary where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Secretary (createDateTime, updateDateTime, user_account_id) values (?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Secretary)] with identifierForTableGroup [taha.clinic.entity.Secretary] for NavigablePath [taha.clinic.entity.Secretary] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@8641b7d] with identifierForTableGroup [taha.clinic.entity.Secretary.userAccount] for NavigablePath [taha.clinic.entity.Secretary.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37c7766e] with identifierForTableGroup [taha.clinic.entity.Secretary.userAccount.person] for NavigablePath [taha.clinic.entity.Secretary.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Secretary]
 |  +-BasicFetch [taha.clinic.entity.Secretary.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Secretary.updateDateTime]
 |  \-EntityFetchJoinedImpl [taha.clinic.entity.Secretary.userAccount]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (s1 : taha.clinic.entity.Secretary) {
          primaryTableReference : Secretary as s1_0
          TableGroupJoins {
            left  join LazyTableGroup (u1 : taha.clinic.entity.Secretary.userAccount) {
              primaryTableReference : UserAccount as u1_0
              TableGroupJoins {
                left  join LazyTableGroup (p1 : taha.clinic.entity.Secretary.userAccount.person) {
                  primaryTableReference : Person as p1_0
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Appointment
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Appointment where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Appointment (createDateTime, date, doctor_id, fromTime, medical_record_id, patient_id, status, thruTime, updateDateTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Appointment set createDateTime=?, date=?, doctor_id=?, fromTime=?, medical_record_id=?, patient_id=?, status=?, thruTime=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Appointment where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Appointment (createDateTime, date, doctor_id, fromTime, medical_record_id, patient_id, status, thruTime, updateDateTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : a1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Appointment)] with identifierForTableGroup [taha.clinic.entity.Appointment] for NavigablePath [taha.clinic.entity.Appointment] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4b7ed03e] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor] for NavigablePath [taha.clinic.entity.Appointment.doctor] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@636985df] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.clinic] for NavigablePath [taha.clinic.entity.Appointment.doctor.clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f91fbda] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Appointment.doctor.clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@723e3c17] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.person] for NavigablePath [taha.clinic.entity.Appointment.doctor.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4ffced4e] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.userAccount] for NavigablePath [taha.clinic.entity.Appointment.doctor.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6094de13] with identifierForTableGroup [taha.clinic.entity.Appointment.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.doctor.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@bbb6f0] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e6ec74] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2bd8f7db] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d7ad0f5] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@30abf79c] with identifierForTableGroup [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@49a38b1] with identifierForTableGroup [taha.clinic.entity.Appointment.patient] for NavigablePath [taha.clinic.entity.Appointment.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@681061d6] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53d6e959] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3caee3a8] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@69a40b3c] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@251c90f] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.userAccount] for NavigablePath [taha.clinic.entity.Appointment.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6629643d] with identifierForTableGroup [taha.clinic.entity.Appointment.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Appointment.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p8_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Appointment]
 |  +-BasicFetch [taha.clinic.entity.Appointment.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Appointment.date]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.doctor]
 |  +-BasicFetch [taha.clinic.entity.Appointment.fromTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.medicalRecord]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Appointment.patient]
 |  +-BasicFetch [taha.clinic.entity.Appointment.status]
 |  +-BasicFetch [taha.clinic.entity.Appointment.thruTime]
 |  \-BasicFetch [taha.clinic.entity.Appointment.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (a1 : taha.clinic.entity.Appointment) {
          primaryTableReference : Appointment as a1_0
          TableGroupJoins {
            left  join LazyTableGroup (d1 : taha.clinic.entity.Appointment.doctor) {
              primaryTableReference : Doctor as d1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : taha.clinic.entity.Appointment.doctor.clinic) {
                  primaryTableReference : Clinic as c1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (h1 : taha.clinic.entity.Appointment.doctor.clinic.hospital) {
                      primaryTableReference : Hospital as h1_0
                    }
                  }
                }
                left  join LazyTableGroup (p1 : taha.clinic.entity.Appointment.doctor.person) {
                  primaryTableReference : Person as p1_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.Appointment.doctor.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p2 : taha.clinic.entity.Appointment.doctor.userAccount.person) {
                      primaryTableReference : Person as p2_0
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (m1 : taha.clinic.entity.Appointment.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p3 : taha.clinic.entity.Appointment.medicalRecord.patient) {
                  primaryTableReference : Patient as p3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (m2 : taha.clinic.entity.Appointment.medicalRecord.patient.medicalRecord) {
                      primaryTableReference : MedicalRecord as m2_0
                    }
                    left  join LazyTableGroup (u2 : taha.clinic.entity.Appointment.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u2_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p4 : taha.clinic.entity.Appointment.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p4_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (p5 : taha.clinic.entity.Appointment.patient) {
              primaryTableReference : Patient as p5_0
              TableGroupJoins {
                left  join LazyTableGroup (m3 : taha.clinic.entity.Appointment.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p6 : taha.clinic.entity.Appointment.patient.medicalRecord.patient) {
                      primaryTableReference : Patient as p6_0
                      TableGroupJoins {
                        left  join LazyTableGroup (u3 : taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount) {
                          primaryTableReference : UserAccount as u3_0
                          TableGroupJoins {
                            left  join LazyTableGroup (p7 : taha.clinic.entity.Appointment.patient.medicalRecord.patient.userAccount.person) {
                              primaryTableReference : Person as p7_0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                left  join LazyTableGroup (u4 : taha.clinic.entity.Appointment.patient.userAccount) {
                  primaryTableReference : UserAccount as u4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p8 : taha.clinic.entity.Appointment.patient.userAccount.person) {
                      primaryTableReference : Person as p8_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.MedicalRecord
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from MedicalRecord where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into MedicalRecord (createDateTime, patient_id, updateDateTime, id) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update MedicalRecord set createDateTime=?, patient_id=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from MedicalRecord where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into MedicalRecord (createDateTime, patient_id, updateDateTime) values (?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord)] with identifierForTableGroup [taha.clinic.entity.MedicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64656b9e] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6870cfac] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@45554613] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@63e5b8aa] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.MedicalRecord]
 |  +-DelayedCollectionFetch [taha.clinic.entity.MedicalRecord.appointments]
 |  +-BasicFetch [taha.clinic.entity.MedicalRecord.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.MedicalRecord.patient]
 |  +-DelayedCollectionFetch [taha.clinic.entity.MedicalRecord.prescriptions]
 |  \-BasicFetch [taha.clinic.entity.MedicalRecord.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (m1 : taha.clinic.entity.MedicalRecord) {
          primaryTableReference : MedicalRecord as m1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : taha.clinic.entity.MedicalRecord.patient) {
              primaryTableReference : Patient as p1_0
              TableGroupJoins {
                left  join LazyTableGroup (m2 : taha.clinic.entity.MedicalRecord.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m2_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.MedicalRecord.patient.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p2 : taha.clinic.entity.MedicalRecord.patient.userAccount.person) {
                      primaryTableReference : Person as p2_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.UserAccount
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from UserAccount where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into UserAccount (accountType, createDateTime, password, person_id, updateDateTime, username, id) values (?, ?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update UserAccount set accountType=?, createDateTime=?, password=?, person_id=?, updateDateTime=?, username=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from UserAccount where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into UserAccount (accountType, createDateTime, password, person_id, updateDateTime, username) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.UserAccount)] with identifierForTableGroup [taha.clinic.entity.UserAccount] for NavigablePath [taha.clinic.entity.UserAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4270b142] with identifierForTableGroup [taha.clinic.entity.UserAccount.person] for NavigablePath [taha.clinic.entity.UserAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.UserAccount]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.accountType]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.password]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.UserAccount.person]
 |  +-BasicFetch [taha.clinic.entity.UserAccount.updateDateTime]
 |  \-BasicFetch [taha.clinic.entity.UserAccount.username]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : taha.clinic.entity.UserAccount) {
          primaryTableReference : UserAccount as u1_0
          TableGroupJoins {
            left  join LazyTableGroup (p1 : taha.clinic.entity.UserAccount.person) {
              primaryTableReference : Person as p1_0
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Prescription
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Prescription where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Prescription (createDateTime, doctor_id, medical_record_id, patient_id, updateDateTime, id) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Prescription set createDateTime=?, doctor_id=?, medical_record_id=?, patient_id=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Prescription where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Prescription (createDateTime, doctor_id, medical_record_id, patient_id, updateDateTime) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Prescription)] with identifierForTableGroup [taha.clinic.entity.Prescription] for NavigablePath [taha.clinic.entity.Prescription] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6314df3c] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor] for NavigablePath [taha.clinic.entity.Prescription.doctor] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5785e813] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.clinic] for NavigablePath [taha.clinic.entity.Prescription.doctor.clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10b8b900] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.Prescription.doctor.clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6d294ddc] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.person] for NavigablePath [taha.clinic.entity.Prescription.doctor.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2801827a] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.userAccount] for NavigablePath [taha.clinic.entity.Prescription.doctor.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@50bc3219] with identifierForTableGroup [taha.clinic.entity.Prescription.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.doctor.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@599f1b7] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@22791b75] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@64f4f12] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@37d28938] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d0cd23c] with identifierForTableGroup [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@17c4dc5b] with identifierForTableGroup [taha.clinic.entity.Prescription.patient] for NavigablePath [taha.clinic.entity.Prescription.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b0f266e] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4837f97e] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@53314f76] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@62a6674f] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p8_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@70881123] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.userAccount] for NavigablePath [taha.clinic.entity.Prescription.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@703fa45] with identifierForTableGroup [taha.clinic.entity.Prescription.patient.userAccount.person] for NavigablePath [taha.clinic.entity.Prescription.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p9_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Prescription]
 |  +-BasicFetch [taha.clinic.entity.Prescription.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.doctor]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Prescription.drugs]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.medicalRecord]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Prescription.patient]
 |  \-BasicFetch [taha.clinic.entity.Prescription.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Prescription) {
          primaryTableReference : Prescription as p1_0
          TableGroupJoins {
            left  join LazyTableGroup (d1 : taha.clinic.entity.Prescription.doctor) {
              primaryTableReference : Doctor as d1_0
              TableGroupJoins {
                left  join LazyTableGroup (c1 : taha.clinic.entity.Prescription.doctor.clinic) {
                  primaryTableReference : Clinic as c1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (h1 : taha.clinic.entity.Prescription.doctor.clinic.hospital) {
                      primaryTableReference : Hospital as h1_0
                    }
                  }
                }
                left  join LazyTableGroup (p2 : taha.clinic.entity.Prescription.doctor.person) {
                  primaryTableReference : Person as p2_0
                }
                left  join LazyTableGroup (u1 : taha.clinic.entity.Prescription.doctor.userAccount) {
                  primaryTableReference : UserAccount as u1_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p3 : taha.clinic.entity.Prescription.doctor.userAccount.person) {
                      primaryTableReference : Person as p3_0
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (m1 : taha.clinic.entity.Prescription.medicalRecord) {
              primaryTableReference : MedicalRecord as m1_0
              TableGroupJoins {
                left  join LazyTableGroup (p4 : taha.clinic.entity.Prescription.medicalRecord.patient) {
                  primaryTableReference : Patient as p4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (m2 : taha.clinic.entity.Prescription.medicalRecord.patient.medicalRecord) {
                      primaryTableReference : MedicalRecord as m2_0
                    }
                    left  join LazyTableGroup (u2 : taha.clinic.entity.Prescription.medicalRecord.patient.userAccount) {
                      primaryTableReference : UserAccount as u2_0
                      TableGroupJoins {
                        left  join LazyTableGroup (p5 : taha.clinic.entity.Prescription.medicalRecord.patient.userAccount.person) {
                          primaryTableReference : Person as p5_0
                        }
                      }
                    }
                  }
                }
              }
            }
            left  join LazyTableGroup (p6 : taha.clinic.entity.Prescription.patient) {
              primaryTableReference : Patient as p6_0
              TableGroupJoins {
                left  join LazyTableGroup (m3 : taha.clinic.entity.Prescription.patient.medicalRecord) {
                  primaryTableReference : MedicalRecord as m3_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p7 : taha.clinic.entity.Prescription.patient.medicalRecord.patient) {
                      primaryTableReference : Patient as p7_0
                      TableGroupJoins {
                        left  join LazyTableGroup (u3 : taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount) {
                          primaryTableReference : UserAccount as u3_0
                          TableGroupJoins {
                            left  join LazyTableGroup (p8 : taha.clinic.entity.Prescription.patient.medicalRecord.patient.userAccount.person) {
                              primaryTableReference : Person as p8_0
                            }
                          }
                        }
                      }
                    }
                  }
                }
                left  join LazyTableGroup (u4 : taha.clinic.entity.Prescription.patient.userAccount) {
                  primaryTableReference : UserAccount as u4_0
                  TableGroupJoins {
                    left  join LazyTableGroup (p9 : taha.clinic.entity.Prescription.patient.userAccount.person) {
                      primaryTableReference : Person as p9_0
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Drug
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Drug where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Drug (createDateTime, dose, name, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Drug set createDateTime=?, dose=?, name=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Drug where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Drug (createDateTime, dose, name, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Drug)] with identifierForTableGroup [taha.clinic.entity.Drug] for NavigablePath [taha.clinic.entity.Drug] 
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Drug]
 |  +-BasicFetch [taha.clinic.entity.Drug.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Drug.dose]
 |  +-BasicFetch [taha.clinic.entity.Drug.name]
 |  \-BasicFetch [taha.clinic.entity.Drug.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (d1 : taha.clinic.entity.Drug) {
          primaryTableReference : Drug as d1_0
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Person
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Person where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Person (createDateTime, firstName, lastName, nationalCode, updateDateTime, id) values (?, ?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Person set createDateTime=?, firstName=?, lastName=?, nationalCode=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Person where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Person (createDateTime, firstName, lastName, nationalCode, updateDateTime) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Person)] with identifierForTableGroup [taha.clinic.entity.Person] for NavigablePath [taha.clinic.entity.Person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Person]
 |  +-BasicFetch [taha.clinic.entity.Person.createDateTime]
 |  +-BasicFetch [taha.clinic.entity.Person.firstName]
 |  +-BasicFetch [taha.clinic.entity.Person.lastName]
 |  +-BasicFetch [taha.clinic.entity.Person.nationalCode]
 |  \-BasicFetch [taha.clinic.entity.Person.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : taha.clinic.entity.Person) {
          primaryTableReference : Person as p1_0
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister | Static SQL for entity: taha.clinic.entity.Clinic
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Version select: select id from Clinic where id =?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Insert 0: insert into Clinic (createDateTime, hospital_id, name, updateDateTime, id) values (?, ?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Update 0: update Clinic set createDateTime=?, hospital_id=?, name=?, updateDateTime=? where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Delete 0: delete from Clinic where id=?
2022-11-14 20:30:32 | DEBUG | o.h.p.e.AbstractEntityPersister |  Identity insert: insert into Clinic (createDateTime, hospital_id, name, updateDateTime) values (?, ?, ?, ?)
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Clinic)] with identifierForTableGroup [taha.clinic.entity.Clinic] for NavigablePath [taha.clinic.entity.Clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2725ca05] with identifierForTableGroup [taha.clinic.entity.Clinic.hospital] for NavigablePath [taha.clinic.entity.Clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.r.g.AST | DomainResult Graph:
 \-EntityResultImpl [taha.clinic.entity.Clinic]
 |  +-DelayedCollectionFetch [taha.clinic.entity.Clinic.clinicList]
 |  +-BasicFetch [taha.clinic.entity.Clinic.createDateTime]
 |  +-EntityFetchJoinedImpl [taha.clinic.entity.Clinic.hospital]
 |  +-BasicFetch [taha.clinic.entity.Clinic.name]
 |  \-BasicFetch [taha.clinic.entity.Clinic.updateDateTime]

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.tree | SQL AST Tree:%n    SelectStatement {
      FromClause {
        StandardTableGroup (c1 : taha.clinic.entity.Clinic) {
          primaryTableReference : Clinic as c1_0
          TableGroupJoins {
            left  join LazyTableGroup (h1 : taha.clinic.entity.Clinic.hospital) {
              primaryTableReference : Hospital as h1_0
            }
          }
        }
      }
    }

2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@6b1321b7] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList] for NavigablePath [taha.clinic.entity.Clinic.clinicList] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Clinic.clinicList.{element})] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@130cfc47] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.person] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4eeab3e] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.userAccount] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2b6fb197] with identifierForTableGroup [taha.clinic.entity.Clinic.clinicList.{element}.userAccount.person] for NavigablePath [taha.clinic.entity.Clinic.clinicList.{element}.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@448462f0] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student.studentCourseRatings.{element})] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings.{element}] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@787988f4] with identifierForTableGroup [taha.readFile.entity.Student.studentCourseRatings.{element}.course] for NavigablePath [taha.readFile.entity.Student.studentCourseRatings.{element}.course] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [CollectionTableGroup(taha.clinic.entity.Prescription.drugs)] with identifierForTableGroup [taha.clinic.entity.Prescription.drugs] for NavigablePath [taha.clinic.entity.Prescription.drugs] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6c835217] with identifierForTableGroup [taha.clinic.entity.Prescription.drugs.{element}] for NavigablePath [taha.clinic.entity.Prescription.drugs.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_1
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@4584304] with identifierForTableGroup [taha.clinic.entity.Hospital.clinicList] for NavigablePath [taha.clinic.entity.Hospital.clinicList] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.Hospital.clinicList.{element})] with identifierForTableGroup [taha.clinic.entity.Hospital.clinicList.{element}] for NavigablePath [taha.clinic.entity.Hospital.clinicList.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@51888019] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course.studentCourseRatings.{element})] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings.{element}] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6f50d55c] with identifierForTableGroup [taha.readFile.entity.Course.studentCourseRatings.{element}.student] for NavigablePath [taha.readFile.entity.Course.studentCourseRatings.{element}.student] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : a1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@19b5214b] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord.appointments.{element})] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5fb3111a] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4aaecabd] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@23bd0c81] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@1332dec4] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@544e3679] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6889f56f] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.doctor.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@231b35fb] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@26da1ba2] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3820cfe] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@2407a36c] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5ec9eefa] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@28b8f98a] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3b4ef59f] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.appointments.{element}.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@22cb3d59] with identifierForTableGroup [taha.readFile.entity.Course.students] for NavigablePath [taha.readFile.entity.Course.students] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Course.students.{element})] with identifierForTableGroup [taha.readFile.entity.Course.students.{element}] for NavigablePath [taha.readFile.entity.Course.students.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@33e4b9c4] with identifierForTableGroup [taha.readFile.entity.Course.students.{element}.student] for NavigablePath [taha.readFile.entity.Course.students.{element}.student] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : s2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@5cff729b] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.clinic.entity.MedicalRecord.prescriptions.{element})] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@10d18696] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : d1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6b8b5020] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7d37ee0c] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic.hospital] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.clinic.hospital] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : h1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5a7b309b] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@4602f874] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@7739aac4] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.doctor.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@353c6da1] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p4_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@36c07c75] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : m1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@6750e381] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p5_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5d850a25] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u2_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@b022551] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.medicalRecord.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p6_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@3e14d390] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : u3_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@5eb87338] with identifierForTableGroup [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount.person] for NavigablePath [taha.clinic.entity.MedicalRecord.prescriptions.{element}.patient.userAccount.person] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : p7_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c1_0
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.OneToManyTableGroup@2b999ee8] with identifierForTableGroup [taha.readFile.entity.Student.courses] for NavigablePath [taha.readFile.entity.Student.courses] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [StandardTableGroup(taha.readFile.entity.Student.courses.{element})] with identifierForTableGroup [taha.readFile.entity.Student.courses.{element}] for NavigablePath [taha.readFile.entity.Student.courses.{element}] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Registration of TableGroup [org.hibernate.sql.ast.tree.from.LazyTableGroup@31ab1e67] with identifierForTableGroup [taha.readFile.entity.Student.courses.{element}.course] for NavigablePath [taha.readFile.entity.Student.courses.{element}.course] 
2022-11-14 20:30:32 | DEBUG | o.h.o.s.a.create | Created new SQL alias : c2_0
2022-11-14 20:30:33 | DEBUG | o.h.q.n.NamedObjectRepository | Checking 0 named HQL queries
2022-11-14 20:30:33 | DEBUG | o.h.q.n.NamedObjectRepository | Checking 0 named SQL queries
2022-11-14 20:30:33 | INFO  | o.h.o.c.access | HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@149aa7b2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Appointment
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Clinic
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Course
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Doctor
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Drug
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Hospital
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : MedicalRecord
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Patient
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Person
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Prescription
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Prescription_drugs
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Secretary
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : Student
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : StudentCourse
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : StudentCourseRating
2022-11-14 20:30:33 | DEBUG | o.h.m.Table | No alter strings for table : UserAccount
2022-11-14 20:30:33 | DEBUG | o.h.e.t.j.p.i.JtaPlatformInitiator | No JtaPlatform was specified, checking resolver
2022-11-14 20:30:33 | DEBUG | o.h.e.t.j.p.i.JtaPlatformResolverInitiator | No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-11-14 20:30:33 | DEBUG | o.h.e.t.j.p.i.StandardJtaPlatformResolver | Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-14 20:30:33 | INFO  | o.h.e.t.j.p.i.JtaPlatformInitiator | HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-11-14 20:30:33 | DEBUG | o.h.s.i.SessionFactoryServiceRegistryImpl | EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-11-14 20:30:33 | DEBUG | o.h.i.SessionFactoryRegistry | Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5fe46d52
2022-11-14 20:30:33 | DEBUG | o.h.i.SessionFactoryRegistry | Registering SessionFactory: b4e6e2a0-006a-4443-a0ca-d01dcfee1357 (<unnamed>)
2022-11-14 20:30:33 | DEBUG | o.h.i.SessionFactoryRegistry | Not binding SessionFactory to JNDI, no JNDI name configured
2022-11-14 20:30:33 | DEBUG | o.h.s.i.StatisticsInitiator | Statistics initialized [enabled=false]
2022-11-14 20:30:33 | DEBUG | t.c.m.Main | java.io.FileReader@6826b70faaaaaaaaaaaaa
2022-11-14 20:30:33 | DEBUG | t.c.m.Main | java.io.BufferedReader@4df7d9eeaaaaaaaaaaaaa
2022-11-14 20:30:46 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:31:27 | WARN  | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:31:27 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:31:28 | WARN  | t.c.m.Main | java.io.FileReader@27ffd9f8aaaaaaaaaaaaa
2022-11-14 20:31:28 | WARN  | t.c.m.Main | java.io.BufferedReader@642c6461aaaaaaaaaaaaa
2022-11-14 20:31:59 | WARN  | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:31:59 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:32:00 | WARN  | t.c.m.Main | java.io.FileReader@27ffd9f8aaaaaaaaaaaaa
2022-11-14 20:32:00 | WARN  | t.c.m.Main | java.io.BufferedReader@642c6461aaaaaaaaaaaaa
2022-11-14 20:32:24 | WARN  | t.c.m.Main | aaaaaaaaaaaaa
2022-11-14 20:32:24 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:32:25 | WARN  | t.c.m.Main | java.io.FileReader@27ffd9f8xxxxxxxxxx
2022-11-14 20:32:25 | WARN  | t.c.m.Main | java.io.BufferedReader@642c6461bbbbbbbbbbb
2022-11-14 20:38:30 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:38:31 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:38:31 | WARN  | t.r.Main | java.io.FileReader@27ffd9f8xxxxxxxxxx
2022-11-14 20:38:31 | WARN  | t.r.Main | java.io.BufferedReader@642c6461bbbbbbbbbbb
2022-11-14 20:38:56 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:38:57 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:38:57 | WARN  | t.r.Main | java.io.FileReader@21d9cd04xxxxxxxxxx
2022-11-14 20:38:57 | WARN  | t.r.Main | java.io.BufferedReader@799f354abbbbbbbbbbb
2022-11-14 20:40:18 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:40:18 | WARN  | t.r.Main | java.io.FileReader@2f217633xxxxxxxxxx
2022-11-14 20:40:18 | WARN  | t.r.Main | java.io.BufferedReader@a530d0abbbbbbbbbbb
2022-11-14 20:41:16 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:41:16 | WARN  | t.r.Main | java.io.FileReader@2f217633 : xxxxxxxxxx
2022-11-14 20:41:16 | WARN  | t.r.Main | java.io.BufferedReader@a530d0a : bbbbbbbbbbb
2022-11-14 20:42:21 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:42:21 | WARN  | t.r.Main | java.io.FileReader@2f217633 : xxxxxxxxxx
2022-11-14 20:42:21 | WARN  | t.r.Main | java.io.FileReader@2f217633 : ddddddddd
2022-11-14 20:42:21 | WARN  | t.r.Main | false : ddddddddd
2022-11-14 20:42:21 | WARN  | t.r.Main | java.io.BufferedReader@a530d0a : bbbbbbbbbbb
2022-11-14 20:42:21 | WARN  | t.r.Main | false : ssssssss
2022-11-14 20:42:21 | WARN  | t.r.Main | java.io.BufferedReader@a530d0a : ssssssss
2022-11-14 20:42:59 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:42:59 | WARN  | t.r.Main | java.io.FileReader@2f217633 : xxxxxxxxxx
2022-11-14 20:42:59 | WARN  | t.r.Main | java.io.FileReader@2f217633 : ddddddddd
2022-11-14 20:42:59 | WARN  | t.r.Main | true : ddddddddd
2022-11-14 20:42:59 | WARN  | t.r.Main | java.io.BufferedReader@a530d0a : bbbbbbbbbbb
2022-11-14 20:42:59 | WARN  | t.r.Main | true : ssssssss
2022-11-14 20:42:59 | WARN  | t.r.Main | java.io.BufferedReader@a530d0a : ssssssss
2022-11-14 20:42:59 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Praveen , 2019-07-31 19:10:13, 5.0, "excellent teaching "] : mmmmmmm
2022-11-14 20:42:59 | WARN  | t.r.Main | [Ljava.lang.String;@614ca7df : yyyyyyyyy
2022-11-14 20:42:59 | WARN  | t.r.Main | ["Java Microservices Masterclass", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 20:42:59 | WARN  | t.r.Main | [Ljava.lang.String;@4738a206 : yyyyyyyyy
2022-11-14 20:42:59 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 20:42:59 | WARN  | t.r.Main | [Ljava.lang.String;@66d3eec0 : yyyyyyyyy
2022-11-14 20:42:59 | WARN  | t.r.Main | ["Python for Data Science", Dhara Patel, 2019-06-18 02:50:17, 5.0, "Amazing experience aer this course.Thank you,  instructor "] : mmmmmmm
2022-11-14 20:42:59 | WARN  | t.r.Main | [Ljava.lang.String;@1e04fa0a : yyyyyyyyy
2022-11-14 20:42:59 | WARN  | t.r.Main | ["Design Paerns in Java", Dhara Patel, 2019-06-28 21:46:56, 5.0, "Great Experience,  I love thi] : mmmmmmm
2022-11-14 20:42:59 | WARN  | t.r.Main | [Ljava.lang.String;@1af2d44a : yyyyyyyyy
2022-11-14 20:47:40 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 20:47:40 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 20:47:41 | WARN  | t.r.Main | true : ddddddddd
2022-11-14 20:47:41 | WARN  | t.r.Main | java.io.BufferedReader@3ace6346 : ssssssss
2022-11-14 20:47:41 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Praveen , 2019-07-31 19:10:13, 5.0, "excellent teaching "] : mmmmmmm
2022-11-14 20:47:41 | WARN  | t.r.Main | [Ljava.lang.String;@55c1ced9 : yyyyyyyyy
2022-11-14 20:47:41 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 20:47:41 | WARN  | t.r.Main | ["Java Microservices Masterclass", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 20:47:41 | WARN  | t.r.Main | [Ljava.lang.String;@1815577b : yyyyyyyyy
2022-11-14 20:47:41 | WARN  | t.r.Main | Course(name="Java Microservices Masterclass", students=[]) : course
2022-11-14 20:47:41 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 20:47:41 | WARN  | t.r.Main | [Ljava.lang.String;@987a0bb : yyyyyyyyy
2022-11-14 20:47:41 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 20:47:41 | WARN  | t.r.Main | ["Python for Data Science", Dhara Patel, 2019-06-18 02:50:17, 5.0, "Amazing experience aer this course.Thank you,  instructor "] : mmmmmmm
2022-11-14 20:47:41 | WARN  | t.r.Main | [Ljava.lang.String;@39f42d0e : yyyyyyyyy
2022-11-14 20:47:41 | WARN  | t.r.Main | Course(name="Python for Data Science", students=[]) : course
2022-11-14 20:47:41 | WARN  | t.r.Main | ["Design Patterns in Java", Dhara Patel, 2019-06-28 21:46:56, 5.0, "Great Experience,  I love this] : mmmmmmm
2022-11-14 20:47:41 | WARN  | t.r.Main | [Ljava.lang.String;@532dacf5 : yyyyyyyyy
2022-11-14 20:47:41 | WARN  | t.r.Main | Course(name="Design Patterns in Java", students=[]) : course
2022-11-14 21:03:48 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 21:03:48 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 21:03:49 | WARN  | t.r.Main | true : ddddddddd
2022-11-14 21:03:49 | WARN  | t.r.Main | java.io.BufferedReader@7159d601 : ssssssss
2022-11-14 21:03:49 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Praveen , 2019-07-31 19:10:13, 5.0, "excellent teaching "] : mmmmmmm
2022-11-14 21:03:49 | WARN  | t.r.Main | [Ljava.lang.String;@63f9ddf9 : yyyyyyyyy
2022-11-14 21:03:49 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 21:03:49 | WARN  | t.r.Main | ["Java Microservices Masterclass", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 21:03:49 | WARN  | t.r.Main | [Ljava.lang.String;@733534f9 : yyyyyyyyy
2022-11-14 21:03:49 | WARN  | t.r.Main | Course(name="Java Microservices Masterclass", students=[]) : course
2022-11-14 21:03:49 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 21:03:49 | WARN  | t.r.Main | [Ljava.lang.String;@59d5a6fd : yyyyyyyyy
2022-11-14 21:03:49 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 21:03:49 | WARN  | t.r.Main | ["Python for Data Science", Dhara Patel, 2019-06-18 02:50:17, 5.0, "Amazing experience aer this course.Thank you,  instructor "] : mmmmmmm
2022-11-14 21:03:49 | WARN  | t.r.Main | [Ljava.lang.String;@3bc20984 : yyyyyyyyy
2022-11-14 21:03:49 | WARN  | t.r.Main | Course(name="Python for Data Science", students=[]) : course
2022-11-14 21:03:49 | WARN  | t.r.Main | ["Design Patterns in Java", Dhara Patel, 2019-06-28 21:46:56, 5.0, "Great Experience,  I love this] : mmmmmmm
2022-11-14 21:03:49 | WARN  | t.r.Main | [Ljava.lang.String;@1002d192 : yyyyyyyyy
2022-11-14 21:03:49 | WARN  | t.r.Main | Course(name="Design Patterns in Java", students=[]) : course
2022-11-14 21:04:46 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 21:04:46 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 21:04:47 | WARN  | t.r.Main | true : ddddddddd
2022-11-14 21:04:47 | WARN  | t.r.Main | java.io.BufferedReader@7159d601 : ssssssss
2022-11-14 21:04:47 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Praveen , 2019-07-31 19:10:13, 5.0, "excellent teaching "] : mmmmmmm
2022-11-14 21:04:47 | WARN  | t.r.Main | [Ljava.lang.String;@63f9ddf9 : yyyyyyyyy
2022-11-14 21:04:47 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 21:04:47 | WARN  | t.r.Main | ["Java Microservices Masterclass", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 21:04:47 | WARN  | t.r.Main | [Ljava.lang.String;@733534f9 : yyyyyyyyy
2022-11-14 21:04:47 | WARN  | t.r.Main | Course(name="Java Microservices Masterclass", students=[]) : course
2022-11-14 21:04:47 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 21:04:47 | WARN  | t.r.Main | [Ljava.lang.String;@59d5a6fd : yyyyyyyyy
2022-11-14 21:04:47 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 21:04:47 | WARN  | t.r.Main | ["Python for Data Science", Dhara Patel, 2019-06-18 02:50:17, 5.0, "Amazing experience aer this course.Thank you,  instructor "] : mmmmmmm
2022-11-14 21:04:47 | WARN  | t.r.Main | [Ljava.lang.String;@3bc20984 : yyyyyyyyy
2022-11-14 21:04:47 | WARN  | t.r.Main | Course(name="Python for Data Science", students=[]) : course
2022-11-14 21:04:47 | WARN  | t.r.Main | ["Design Patterns in Java", Dhara Patel, 2019-06-28 21:46:56, 5.0, "Great Experience,  I love this] : mmmmmmm
2022-11-14 21:04:47 | WARN  | t.r.Main | [Ljava.lang.String;@1002d192 : yyyyyyyyy
2022-11-14 21:04:47 | WARN  | t.r.Main | Course(name="Design Patterns in Java", students=[]) : course
2022-11-14 22:17:08 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 22:17:08 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 22:17:09 | WARN  | t.r.Main | true : ddddddddd
2022-11-14 22:17:09 | WARN  | t.r.Main | java.io.BufferedReader@1a88c4f5 : ssssssss
2022-11-14 22:17:09 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Praveen , 2019-07-31 19:10:13, 5.0, "excellent teaching "] : mmmmmmm
2022-11-14 22:17:09 | WARN  | t.r.Main | [Ljava.lang.String;@45287377 : yyyyyyyyy
2022-11-14 22:17:09 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 22:17:09 | WARN  | t.r.Main | ["Java Microservices Masterclass", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 22:17:09 | WARN  | t.r.Main | [Ljava.lang.String;@247bbfba : yyyyyyyyy
2022-11-14 22:17:09 | WARN  | t.r.Main | Course(name="Java Microservices Masterclass", students=[]) : course
2022-11-14 22:17:09 | WARN  | t.r.Main | ["Java Servlet JSP and Hibernate", Van Hoang , 2019-04-23 09:48:58, 4.5, "The course is great "] : mmmmmmm
2022-11-14 22:17:09 | WARN  | t.r.Main | [Ljava.lang.String;@202f054f : yyyyyyyyy
2022-11-14 22:17:09 | WARN  | t.r.Main | Course(name="Java Servlet JSP and Hibernate", students=[]) : course
2022-11-14 22:17:09 | WARN  | t.r.Main | ["Python for Data Science", Dhara Patel, 2019-06-18 02:50:17, 5.0, "Amazing experience aer this course.Thank you,  instructor "] : mmmmmmm
2022-11-14 22:17:09 | WARN  | t.r.Main | [Ljava.lang.String;@210a26b : yyyyyyyyy
2022-11-14 22:17:09 | WARN  | t.r.Main | Course(name="Python for Data Science", students=[]) : course
2022-11-14 22:17:09 | WARN  | t.r.Main | ["Design Patterns in Java", Dhara Patel, 2019-06-28 21:46:56, 5.0, "Great Experience,  I love this] : mmmmmmm
2022-11-14 22:17:09 | WARN  | t.r.Main | [Ljava.lang.String;@63cf578f : yyyyyyyyy
2022-11-14 22:17:09 | WARN  | t.r.Main | Course(name="Design Patterns in Java", students=[]) : course
2022-11-14 22:21:53 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 22:21:53 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 22:24:53 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 22:24:53 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
2022-11-14 22:25:23 | WARN  | t.r.Main | aaaaaaaaaaaaa
2022-11-14 22:25:23 | WARN  | o.h.o.c.pooling | HHH10001002: Using built-in connection pool (not intended for production use)
